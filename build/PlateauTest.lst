ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"PlateauTest.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy11DaisyVersioD2Ev,"axG",%progbits,_ZN5daisy11DaisyVersioD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy11DaisyVersioD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy11DaisyVersioD2Ev:
  27              	.LVL0:
  28              	.LFB3519:
  29              		.file 1 "../../libDaisy//src/daisy_versio.h"
   1:../../libDaisy//src/daisy_versio.h **** #pragma once
   2:../../libDaisy//src/daisy_versio.h **** #include "daisy_seed.h"
   3:../../libDaisy//src/daisy_versio.h **** 
   4:../../libDaisy//src/daisy_versio.h **** namespace daisy
   5:../../libDaisy//src/daisy_versio.h **** {
   6:../../libDaisy//src/daisy_versio.h **** /**
   7:../../libDaisy//src/daisy_versio.h ****     @brief Class that handles initializing all of the hardware specific to the Desmodus Versio hard
   8:../../libDaisy//src/daisy_versio.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
   9:../../libDaisy//src/daisy_versio.h ****     @author Ankoor Apte, Noise Engineering
  10:../../libDaisy//src/daisy_versio.h ****     @date October 2020
  11:../../libDaisy//src/daisy_versio.h ****     @ingroup boards
  12:../../libDaisy//src/daisy_versio.h **** */
  13:../../libDaisy//src/daisy_versio.h **** class DaisyVersio
  14:../../libDaisy//src/daisy_versio.h **** {
  15:../../libDaisy//src/daisy_versio.h ****   public:
  16:../../libDaisy//src/daisy_versio.h ****     // ENUMS to help index 4 LEDs, 7 knobs/CV inputs, 2 3-position switches
  17:../../libDaisy//src/daisy_versio.h ****     enum AV_LEDS
  18:../../libDaisy//src/daisy_versio.h ****     {
  19:../../libDaisy//src/daisy_versio.h ****         LED_0,
  20:../../libDaisy//src/daisy_versio.h ****         LED_1,
  21:../../libDaisy//src/daisy_versio.h ****         LED_2,
  22:../../libDaisy//src/daisy_versio.h ****         LED_3,
  23:../../libDaisy//src/daisy_versio.h ****         LED_LAST
  24:../../libDaisy//src/daisy_versio.h ****     };
  25:../../libDaisy//src/daisy_versio.h **** 
  26:../../libDaisy//src/daisy_versio.h ****     enum AV_KNOBS
  27:../../libDaisy//src/daisy_versio.h ****     {
  28:../../libDaisy//src/daisy_versio.h ****         KNOB_0,
  29:../../libDaisy//src/daisy_versio.h ****         KNOB_1,
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 2


  30:../../libDaisy//src/daisy_versio.h ****         KNOB_2,
  31:../../libDaisy//src/daisy_versio.h ****         KNOB_3,
  32:../../libDaisy//src/daisy_versio.h ****         KNOB_4,
  33:../../libDaisy//src/daisy_versio.h ****         KNOB_5,
  34:../../libDaisy//src/daisy_versio.h ****         KNOB_6,
  35:../../libDaisy//src/daisy_versio.h ****         KNOB_LAST
  36:../../libDaisy//src/daisy_versio.h ****     };
  37:../../libDaisy//src/daisy_versio.h **** 
  38:../../libDaisy//src/daisy_versio.h ****     enum AV_TOGGLE3
  39:../../libDaisy//src/daisy_versio.h ****     {
  40:../../libDaisy//src/daisy_versio.h ****         SW_0,
  41:../../libDaisy//src/daisy_versio.h ****         SW_1,
  42:../../libDaisy//src/daisy_versio.h ****         SW_LAST
  43:../../libDaisy//src/daisy_versio.h ****     };
  44:../../libDaisy//src/daisy_versio.h **** 
  45:../../libDaisy//src/daisy_versio.h ****     DaisyVersio() {}
  46:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
  30              		.loc 1 46 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB218:
  36              	.LBI218:
  37              		.file 2 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn Constructor */
  18:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  19:../../libDaisy//src/hid/gatein.h **** 
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn Destructor */
  21:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
  38              		.loc 2 21 5 view .LVU1
  39              		.loc 2 21 5 is_stmt 0 view .LVU2
  40              	.LBE218:
  41              	.LBB219:
  42              	.LBI219:
  43              		.file 3 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 3


   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE219:
  47              	.LBB220:
  48              	.LBI220:
  49              		.file 4 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 4


  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  50              		.loc 4 22 5 is_stmt 1 view .LVU5
  51              	.LBB221:
  52              	.LBI221:
  53              		.file 5 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 5


  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  54              		.loc 5 97 5 view .LVU6
  55              		.loc 5 97 5 is_stmt 0 view .LVU7
  56              	.LBE221:
  57              	.LBB222:
  58              	.LBI222:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 6


  59              		.file 6 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  60              		.loc 6 42 5 is_stmt 1 view .LVU8
  61              		.loc 6 42 5 is_stmt 0 view .LVU9
  62              	.LBE222:
  63              	.LBB223:
  64              	.LBI223:
  65              		.file 7 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 7


   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 8


  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  66              		.loc 7 110 5 is_stmt 1 view .LVU10
  67              		.loc 7 110 5 is_stmt 0 view .LVU11
  68              	.LBE223:
  69              	.LBB224:
  70              	.LBI224:
  71              		.file 8 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 9


   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 10


  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  72              		.loc 8 96 5 is_stmt 1 view .LVU12
  73              		.loc 8 96 5 is_stmt 0 view .LVU13
  74              	.LBE224:
  75              	.LBE220:
  76              		.loc 1 46 21 view .LVU14
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE3519:
  81              		.weak	_ZN5daisy11DaisyVersioD1Ev
  82              		.thumb_set _ZN5daisy11DaisyVersioD1Ev,_ZN5daisy11DaisyVersioD2Ev
  83 0002 00BF     		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	_Z13AudioCallbackPKfPfj
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv5-d16
  92              	_Z13AudioCallbackPKfPfj:
  93              	.LVL1:
  94              	.LFB4773:
  95              		.file 9 "PlateauTest.cpp"
   1:PlateauTest.cpp **** #define DSJ_PLATEAU_HPP
   2:PlateauTest.cpp **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 11


   3:PlateauTest.cpp **** #include "Dattorro.hpp"
   4:PlateauTest.cpp **** #include "dsp/shaping/NonLinear.hpp"
   5:PlateauTest.cpp **** #include "dsp/modulation/LinearEnvelope.hpp"
   6:PlateauTest.cpp **** #include <vector>
   7:PlateauTest.cpp **** 
   8:PlateauTest.cpp **** using namespace daisy;
   9:PlateauTest.cpp **** using namespace daisysp;
  10:PlateauTest.cpp **** 
  11:PlateauTest.cpp **** DaisyVersio hw;
  12:PlateauTest.cpp **** 
  13:PlateauTest.cpp **** const float dryMin = 0.f;
  14:PlateauTest.cpp **** const float dryMax = 1.f;
  15:PlateauTest.cpp **** const float wetMin = 0.f;
  16:PlateauTest.cpp **** const float wetMax = 1.f;
  17:PlateauTest.cpp **** const float preDelayNormSens = 0.1f;
  18:PlateauTest.cpp **** const float preDelayLowSens = 0.05f;
  19:PlateauTest.cpp **** const float sizeMin = 0.0025f;
  20:PlateauTest.cpp **** const float sizeMax = 4.0f;
  21:PlateauTest.cpp **** const float diffMin = 0.f;
  22:PlateauTest.cpp **** const float diffMax = 1.f;
  23:PlateauTest.cpp **** const float decayMin = 0.1f;
  24:PlateauTest.cpp **** const float decayMax = 0.9999f;
  25:PlateauTest.cpp **** const float reverbLowDampMin = 0.f;
  26:PlateauTest.cpp **** const float reverbLowDampMax = 10.f;
  27:PlateauTest.cpp **** const float reverbHighDampMin = 0.f;
  28:PlateauTest.cpp **** const float reverbHIghDampMax = 10.f;
  29:PlateauTest.cpp **** const float modSpeedMin = 0.f;
  30:PlateauTest.cpp **** const float modSpeedMax = 1.f;
  31:PlateauTest.cpp **** const float modDepthMin = 0.f;
  32:PlateauTest.cpp **** const float modDepthMax = 16.f;
  33:PlateauTest.cpp **** const float modShapeMin = 0.001f;
  34:PlateauTest.cpp **** const float modShapeMax = 0.999f;
  35:PlateauTest.cpp **** 
  36:PlateauTest.cpp **** constexpr float minus20dBGain = 0.1f;
  37:PlateauTest.cpp **** constexpr float minus18dBGain = 0.12589254f;
  38:PlateauTest.cpp **** constexpr float zerodBGain = 1.f;
  39:PlateauTest.cpp **** 
  40:PlateauTest.cpp **** constexpr float saturatorPreGain = 0.111f;
  41:PlateauTest.cpp **** constexpr float saturatorDrive = 0.95f;
  42:PlateauTest.cpp **** constexpr float saturatorPostGain = 9.999f;
  43:PlateauTest.cpp **** 
  44:PlateauTest.cpp **** float wet = 0.5f;
  45:PlateauTest.cpp **** float dry = 1.f;
  46:PlateauTest.cpp **** float preDelay = 0.f;
  47:PlateauTest.cpp **** float preDelayCVSens = preDelayNormSens;
  48:PlateauTest.cpp **** float timeScale = 1.f;
  49:PlateauTest.cpp **** float diffusion = 1.f;
  50:PlateauTest.cpp **** float decay = 0.5f;
  51:PlateauTest.cpp **** float inputSensitivity = minus18dBGain;
  52:PlateauTest.cpp **** float inputDampLow = 0.f;
  53:PlateauTest.cpp **** float inputDampHigh = 10.f;
  54:PlateauTest.cpp **** float reverbDampLow = 0.f;
  55:PlateauTest.cpp **** float reverbDampHigh = 10.f;
  56:PlateauTest.cpp **** float modSpeed = 0.1f;
  57:PlateauTest.cpp **** float modShape = 0.5f;
  58:PlateauTest.cpp **** float modDepth = 0.f;
  59:PlateauTest.cpp **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 12


  60:PlateauTest.cpp **** bool freezeButtonState = false;
  61:PlateauTest.cpp **** bool freezeToggle = false;
  62:PlateauTest.cpp **** bool freezeToggleButtonState = false;
  63:PlateauTest.cpp **** bool freeze = false;
  64:PlateauTest.cpp **** bool frozen = false;
  65:PlateauTest.cpp **** bool tunedButtonState = false;
  66:PlateauTest.cpp **** bool diffuseButtonState = true;
  67:PlateauTest.cpp **** int preDelayCVSensState = 0;
  68:PlateauTest.cpp **** int inputSensitivityState = 0;
  69:PlateauTest.cpp **** bool softDriveOutput = 0;
  70:PlateauTest.cpp **** 
  71:PlateauTest.cpp **** bool clear = false;
  72:PlateauTest.cpp **** bool cleared = true;
  73:PlateauTest.cpp **** bool fadeOut = false;
  74:PlateauTest.cpp **** bool fadeIn = false;
  75:PlateauTest.cpp **** 
  76:PlateauTest.cpp **** Dattorro reverb;
  77:PlateauTest.cpp **** LinearEnvelope envelope;
  78:PlateauTest.cpp **** 
  79:PlateauTest.cpp **** int panelStyle = 0;
  80:PlateauTest.cpp **** int tuned = 0;
  81:PlateauTest.cpp **** int diffuseInput = 1;
  82:PlateauTest.cpp **** 
  83:PlateauTest.cpp **** float leftInput = 0.f;
  84:PlateauTest.cpp **** float rightInput = 0.f;
  85:PlateauTest.cpp **** float leftOutput = 0.f;
  86:PlateauTest.cpp **** float rightOutput = 0.f;
  87:PlateauTest.cpp **** 
  88:PlateauTest.cpp **** float initEnvelope = 0.f;
  89:PlateauTest.cpp **** 
  90:PlateauTest.cpp **** 
  91:PlateauTest.cpp **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  92:PlateauTest.cpp ****               AudioHandle::InterleavingOutputBuffer out,
  93:PlateauTest.cpp ****               size_t                                size)
  94:PlateauTest.cpp **** {
  96              		.loc 9 94 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 0, uses_anonymous_args = 0
  95:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 100              		.loc 9 95 5 view .LVU16
 101              	.LBB225:
 102              		.loc 9 95 25 view .LVU17
 103 0000 002A     		cmp	r2, #0
 104 0002 75D0     		beq	.L14
 105 0004 013A     		subs	r2, r2, #1
 106              	.LVL2:
 107              		.loc 9 95 25 is_stmt 0 view .LVU18
 108              	.LBE225:
  94:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 109              		.loc 9 94 1 view .LVU19
 110 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 111              		.cfi_def_cfa_offset 36
 112              		.cfi_offset 4, -36
 113              		.cfi_offset 5, -32
 114              		.cfi_offset 6, -28
 115              		.cfi_offset 7, -24
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 13


 116              		.cfi_offset 8, -20
 117              		.cfi_offset 9, -16
 118              		.cfi_offset 10, -12
 119              		.cfi_offset 11, -8
 120              		.cfi_offset 14, -4
 121 000a 5308     		lsrs	r3, r2, #1
 122 000c 0446     		mov	r4, r0
 123 000e 0D46     		mov	r5, r1
 124              	.LBB226:
 125              		.loc 9 95 25 view .LVU20
 126 0010 0026     		movs	r6, #0
 127 0012 DFF8F0B0 		ldr	fp, .L17+16
 128 0016 DFF8F080 		ldr	r8, .L17+20
 129 001a 364F     		ldr	r7, .L17
 130 001c DFF8ECA0 		ldr	r10, .L17+24
 131 0020 DFF8EC90 		ldr	r9, .L17+28
 132              	.LBE226:
  94:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 133              		.loc 9 94 1 view .LVU21
 134 0024 2DED028B 		vpush.64	{d8}
 135              		.cfi_def_cfa_offset 44
 136              		.cfi_offset 80, -44
 137              		.cfi_offset 81, -40
 138 0028 83B0     		sub	sp, sp, #12
 139              		.cfi_def_cfa_offset 56
 140 002a 0193     		str	r3, [sp, #4]
 141              	.LVL3:
 142              	.L12:
 143              	.LBB227:
  96:PlateauTest.cpp ****     {
  97:PlateauTest.cpp ****         reverb.process(in[i] * 10 * minus20dBGain * inputSensitivity,
 144              		.loc 9 97 9 is_stmt 1 view .LVU22
  98:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 145              		.loc 9 98 27 is_stmt 0 view .LVU23
 146 002c B2EE048A 		vmov.f32	s16, #1.0e+1
 147 0030 D4ED010A 		vldr.32	s1, [r4, #4]
  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 148              		.loc 9 97 30 view .LVU24
 149 0034 D4ED007A 		vldr.32	s15, [r4]
 150              		.loc 9 98 32 view .LVU25
 151 0038 9FED2F7A 		vldr.32	s14, .L17+4
 152              		.loc 9 98 27 view .LVU26
 153 003c 60EE880A 		vmul.f32	s1, s1, s16
  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 154              		.loc 9 97 23 view .LVU27
 155 0040 9BED000A 		vldr.32	s0, [fp]
  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 156              		.loc 9 97 30 view .LVU28
 157 0044 67EE887A 		vmul.f32	s15, s15, s16
  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 158              		.loc 9 97 23 view .LVU29
 159 0048 2C48     		ldr	r0, .L17+8
 160              		.loc 9 98 32 view .LVU30
 161 004a 60EE870A 		vmul.f32	s1, s1, s14
  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 162              		.loc 9 97 35 view .LVU31
 163 004e 67EE877A 		vmul.f32	s15, s15, s14
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 14


  97:PlateauTest.cpp ****                 in[i + 1] * 10 * minus20dBGain * inputSensitivity);
 164              		.loc 9 97 23 view .LVU32
 165 0052 60EE800A 		vmul.f32	s1, s1, s0
 166 0056 27EE800A 		vmul.f32	s0, s15, s0
 167 005a FFF7FEFF 		bl	_ZN8Dattorro7processEff
 168              	.LVL4:
  99:PlateauTest.cpp **** 
 100:PlateauTest.cpp ****         leftOutput = reverb.getLeftOutput();
 169              		.loc 9 100 9 is_stmt 1 view .LVU33
 170              		.loc 9 100 42 is_stmt 0 view .LVU34
 171 005e 2748     		ldr	r0, .L17+8
 172 0060 FFF7FEFF 		bl	_ZNK8Dattorro13getLeftOutputEv
 173              	.LVL5:
 101:PlateauTest.cpp ****         rightOutput = reverb.getRightOutput();
 174              		.loc 9 101 44 view .LVU35
 175 0064 2548     		ldr	r0, .L17+8
 100:PlateauTest.cpp ****         rightOutput = reverb.getRightOutput();
 176              		.loc 9 100 20 view .LVU36
 177 0066 88ED000A 		vstr.32	s0, [r8]
 178              		.loc 9 101 9 is_stmt 1 view .LVU37
 179              		.loc 9 101 44 is_stmt 0 view .LVU38
 180 006a FFF7FEFF 		bl	_ZNK8Dattorro14getRightOutputEv
 181              	.LVL6:
 102:PlateauTest.cpp **** 
 103:PlateauTest.cpp ****         if(leftOutput > 10 || leftOutput < 10)
 104:PlateauTest.cpp ****             leftOutput = 0;
 182              		.loc 9 104 13 is_stmt 1 view .LVU39
 105:PlateauTest.cpp **** 
 106:PlateauTest.cpp ****         if(rightOutput > 10 || rightOutput < 10)
 183              		.loc 9 106 9 view .LVU40
 107:PlateauTest.cpp ****             rightOutput = 0;
 184              		.loc 9 107 13 view .LVU41
 108:PlateauTest.cpp **** 
 109:PlateauTest.cpp ****         out[i] = in[i] * dry + leftOutput * wet;
 185              		.loc 9 109 9 view .LVU42
 103:PlateauTest.cpp ****             leftOutput = 0;
 186              		.loc 9 103 23 is_stmt 0 view .LVU43
 187 006e D8ED007A 		vldr.32	s15, [r8]
 106:PlateauTest.cpp ****             rightOutput = 0;
 188              		.loc 9 106 9 view .LVU44
 189 0072 F0EE485A 		vmov.f32	s11, s16
 104:PlateauTest.cpp **** 
 190              		.loc 9 104 24 view .LVU45
 191 0076 9FED227A 		vldr.32	s14, .L17+12
  95:PlateauTest.cpp ****     {
 192              		.loc 9 95 25 view .LVU46
 193 007a 731C     		adds	r3, r6, #1
 103:PlateauTest.cpp ****             leftOutput = 0;
 194              		.loc 9 103 9 view .LVU47
 195 007c F4EEC87A 		vcmpe.f32	s15, s16
 196              		.loc 9 109 43 view .LVU48
 197 0080 99ED006A 		vldr.32	s12, [r9]
 198              		.loc 9 109 30 view .LVU49
 199 0084 DAED006A 		vldr.32	s13, [r10]
 107:PlateauTest.cpp **** 
 200              		.loc 9 107 25 view .LVU50
 201 0088 17EE102A 		vmov	r2, s14
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 15


 101:PlateauTest.cpp **** 
 202              		.loc 9 101 21 view .LVU51
 203 008c 87ED000A 		vstr.32	s0, [r7]
 103:PlateauTest.cpp ****             leftOutput = 0;
 204              		.loc 9 103 9 is_stmt 1 view .LVU52
 205 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 206 0094 00DC     		bgt	.L5
 103:PlateauTest.cpp ****             leftOutput = 0;
 207              		.loc 9 103 28 is_stmt 0 discriminator 1 view .LVU53
 208 0096 03D5     		bpl	.L6
 209              	.L5:
 104:PlateauTest.cpp **** 
 210              		.loc 9 104 24 view .LVU54
 211 0098 F0EE477A 		vmov.f32	s15, s14
 212 009c 88ED007A 		vstr.32	s14, [r8]
 213              	.L6:
 106:PlateauTest.cpp ****             rightOutput = 0;
 214              		.loc 9 106 9 view .LVU55
 215 00a0 B4EEE50A 		vcmpe.f32	s0, s11
 216              		.loc 9 109 43 view .LVU56
 217 00a4 67EE867A 		vmul.f32	s15, s15, s12
 106:PlateauTest.cpp ****             rightOutput = 0;
 218              		.loc 9 106 9 view .LVU57
 219 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 220 00ac 00DC     		bgt	.L8
 106:PlateauTest.cpp ****             rightOutput = 0;
 221              		.loc 9 106 29 discriminator 1 view .LVU58
 222 00ae 00D5     		bpl	.L9
 223              	.L8:
 107:PlateauTest.cpp **** 
 224              		.loc 9 107 25 view .LVU59
 225 00b0 3A60     		str	r2, [r7]	@ float
 226              	.L9:
 227              		.loc 9 109 30 discriminator 2 view .LVU60
 228 00b2 94ED007A 		vldr.32	s14, [r4]
  95:PlateauTest.cpp ****     {
 229              		.loc 9 95 25 discriminator 2 view .LVU61
 230 00b6 0835     		adds	r5, r5, #8
 231 00b8 0834     		adds	r4, r4, #8
 232 00ba 019A     		ldr	r2, [sp, #4]
 233              		.loc 9 109 30 discriminator 2 view .LVU62
 234 00bc E7EE267A 		vfma.f32	s15, s14, s13
  95:PlateauTest.cpp ****     {
 235              		.loc 9 95 25 discriminator 2 view .LVU63
 236 00c0 9642     		cmp	r6, r2
 237 00c2 1E46     		mov	r6, r3
 238              	.LVL7:
 239              		.loc 9 109 16 discriminator 2 view .LVU64
 240 00c4 45ED027A 		vstr.32	s15, [r5, #-8]
 110:PlateauTest.cpp ****         out[i + 1] = in[i + 1] * dry + rightOutput * wet;
 241              		.loc 9 110 9 is_stmt 1 discriminator 2 view .LVU65
 242              		.loc 9 110 52 is_stmt 0 discriminator 2 view .LVU66
 243 00c8 D7ED007A 		vldr.32	s15, [r7]
 244 00cc 99ED006A 		vldr.32	s12, [r9]
 245              		.loc 9 110 38 discriminator 2 view .LVU67
 246 00d0 54ED016A 		vldr.32	s13, [r4, #-4]
 247              		.loc 9 110 52 discriminator 2 view .LVU68
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 16


 248 00d4 67EE867A 		vmul.f32	s15, s15, s12
 249              		.loc 9 110 38 discriminator 2 view .LVU69
 250 00d8 9AED007A 		vldr.32	s14, [r10]
 251 00dc E6EE877A 		vfma.f32	s15, s13, s14
 252              		.loc 9 110 20 discriminator 2 view .LVU70
 253 00e0 45ED017A 		vstr.32	s15, [r5, #-4]
  95:PlateauTest.cpp ****     {
 254              		.loc 9 95 5 is_stmt 1 discriminator 2 view .LVU71
 255              	.LVL8:
  95:PlateauTest.cpp ****     {
 256              		.loc 9 95 25 discriminator 2 view .LVU72
 257 00e4 A2D1     		bne	.L12
 258              	.LBE227:
 111:PlateauTest.cpp ****     }
 112:PlateauTest.cpp **** 
 113:PlateauTest.cpp ****     // reverb.process(in[0] * minus20dBGain * inputSensitivity * envelope._value,
 114:PlateauTest.cpp ****     //             in[1] * minus20dBGain * inputSensitivity * envelope._value);
 115:PlateauTest.cpp **** 
 116:PlateauTest.cpp ****     // out[0] = in[0] * dry/* + reverb.getLeftOutput() * wet *
 117:PlateauTest.cpp ****     //                 envelope._value*/;
 118:PlateauTest.cpp ****     // out[1] = in[1] * dry/* + reverb.getRightOutput() * wet *
 119:PlateauTest.cpp ****     //                 envelope._value*/;
 120:PlateauTest.cpp **** }
 259              		.loc 9 120 1 is_stmt 0 view .LVU73
 260 00e6 03B0     		add	sp, sp, #12
 261              		.cfi_def_cfa_offset 44
 262              		@ sp needed
 263 00e8 BDEC028B 		vldm	sp!, {d8}
 264              		.cfi_restore 80
 265              		.cfi_restore 81
 266              		.cfi_def_cfa_offset 36
 267 00ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 268              	.LVL9:
 269              	.L14:
 270              		.cfi_def_cfa_offset 0
 271              		.cfi_restore 4
 272              		.cfi_restore 5
 273              		.cfi_restore 6
 274              		.cfi_restore 7
 275              		.cfi_restore 8
 276              		.cfi_restore 9
 277              		.cfi_restore 10
 278              		.cfi_restore 11
 279              		.cfi_restore 14
 280              		.loc 9 120 1 view .LVU74
 281 00f0 7047     		bx	lr
 282              	.L18:
 283 00f2 00BF     		.align	2
 284              	.L17:
 285 00f4 00000000 		.word	.LANCHOR3
 286 00f8 CDCCCC3D 		.word	1036831949
 287 00fc 00000000 		.word	.LANCHOR1
 288 0100 00000000 		.word	0
 289 0104 00000000 		.word	.LANCHOR0
 290 0108 00000000 		.word	.LANCHOR2
 291 010c 00000000 		.word	.LANCHOR4
 292 0110 00000000 		.word	.LANCHOR5
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 17


 293              		.cfi_endproc
 294              	.LFE4773:
 296              		.section	.text.startup.main,"ax",%progbits
 297              		.align	1
 298              		.p2align 2,,3
 299              		.global	main
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv5-d16
 305              	main:
 306              	.LFB4774:
 121:PlateauTest.cpp **** 
 122:PlateauTest.cpp **** int main(void)
 123:PlateauTest.cpp **** {
 307              		.loc 9 123 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 124:PlateauTest.cpp **** 	hw.Init();
 312              		.loc 9 124 2 view .LVU76
 313              		.loc 9 124 9 is_stmt 0 view .LVU77
 314 0000 0021     		movs	r1, #0
 125:PlateauTest.cpp **** 
 126:PlateauTest.cpp ****     // logger.Init();
 127:PlateauTest.cpp **** 
 128:PlateauTest.cpp ****     // logger.StartLog(true);
 129:PlateauTest.cpp **** 
 130:PlateauTest.cpp ****     // logger.PrintLine("Hello World");
 131:PlateauTest.cpp **** 
 132:PlateauTest.cpp ****     // for(int i = 0; i < 32; i++)
 133:PlateauTest.cpp ****     //     for(int j = 0; j < 200000; j++)
 134:PlateauTest.cpp ****     //         sdramData[i][j] = 0;
 135:PlateauTest.cpp **** 
 136:PlateauTest.cpp ****     reverb.setSampleRate(48000);
 137:PlateauTest.cpp ****     envelope.setSampleRate(48000);
 315              		.loc 9 137 27 view .LVU78
 316 0002 594D     		ldr	r5, .L29+8
 124:PlateauTest.cpp **** 	hw.Init();
 317              		.loc 9 124 9 view .LVU79
 318 0004 5948     		ldr	r0, .L29+12
 138:PlateauTest.cpp ****     envelope.setTime(0.004f);
 139:PlateauTest.cpp ****     envelope._value = 1.f;
 319              		.loc 9 139 21 view .LVU80
 320 0006 B7EE008A 		vmov.f32	s16, #1.0e+0
 321 000a 594C     		ldr	r4, .L29+16
 123:PlateauTest.cpp **** 	hw.Init();
 322              		.loc 9 123 1 view .LVU81
 323 000c 08B5     		push	{r3, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 124:PlateauTest.cpp **** 
 327              		.loc 9 124 9 view .LVU82
 328 000e FFF7FEFF 		bl	_ZN5daisy11DaisyVersio4InitEb
 329              	.LVL10:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 18


 136:PlateauTest.cpp ****     envelope.setSampleRate(48000);
 330              		.loc 9 136 5 is_stmt 1 view .LVU83
 136:PlateauTest.cpp ****     envelope.setSampleRate(48000);
 331              		.loc 9 136 25 is_stmt 0 view .LVU84
 332 0012 9FED580A 		vldr.32	s0, .L29+20
 333 0016 5848     		ldr	r0, .L29+24
 334 0018 FFF7FEFF 		bl	_ZN8Dattorro13setSampleRateEf
 335              	.LVL11:
 137:PlateauTest.cpp ****     envelope.setTime(0.004f);
 336              		.loc 9 137 5 is_stmt 1 view .LVU85
 137:PlateauTest.cpp ****     envelope.setTime(0.004f);
 337              		.loc 9 137 27 is_stmt 0 view .LVU86
 338 001c 9FED550A 		vldr.32	s0, .L29+20
 339 0020 2846     		mov	r0, r5
 340 0022 FFF7FEFF 		bl	_ZN14LinearEnvelope13setSampleRateEf
 341              	.LVL12:
 138:PlateauTest.cpp ****     envelope._value = 1.f;
 342              		.loc 9 138 5 is_stmt 1 view .LVU87
 138:PlateauTest.cpp ****     envelope._value = 1.f;
 343              		.loc 9 138 21 is_stmt 0 view .LVU88
 344 0026 9FED550A 		vldr.32	s0, .L29+28
 345 002a 2846     		mov	r0, r5
 346 002c FFF7FEFF 		bl	_ZN14LinearEnvelope7setTimeEf
 347              	.LVL13:
 348              		.loc 9 139 5 is_stmt 1 view .LVU89
 140:PlateauTest.cpp **** 
 141:PlateauTest.cpp ****     reverb.setTimeScale(timeScale);
 349              		.loc 9 141 24 is_stmt 0 view .LVU90
 350 0030 534B     		ldr	r3, .L29+32
 351 0032 5148     		ldr	r0, .L29+24
 352 0034 93ED000A 		vldr.32	s0, [r3]
 139:PlateauTest.cpp **** 
 353              		.loc 9 139 21 view .LVU91
 354 0038 85ED008A 		vstr.32	s16, [r5]
 355              		.loc 9 141 5 is_stmt 1 view .LVU92
 356              		.loc 9 141 24 is_stmt 0 view .LVU93
 357 003c FFF7FEFF 		bl	_ZN8Dattorro12setTimeScaleEf
 358              	.LVL14:
 142:PlateauTest.cpp ****     // Clamps predelay between 0 and 1
 143:PlateauTest.cpp ****     reverb.setPreDelay(((preDelay > 0.f) * (preDelay < 1.f) * preDelay) + (preDelay > 1.f));
 359              		.loc 9 143 5 is_stmt 1 view .LVU94
 360              		.loc 9 143 35 is_stmt 0 view .LVU95
 361 0040 504B     		ldr	r3, .L29+36
 362              		.loc 9 143 23 view .LVU96
 363 0042 9FED510A 		vldr.32	s0, .L29+40
 364              		.loc 9 143 35 view .LVU97
 365 0046 93ED007A 		vldr.32	s14, [r3]
 366              		.loc 9 143 23 view .LVU98
 367 004a 4B48     		ldr	r0, .L29+24
 368              		.loc 9 143 35 view .LVU99
 369 004c B4EEC07A 		vcmpe.f32	s14, s0
 370 0050 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 371              		.loc 9 143 54 view .LVU100
 372 0054 B4EEC87A 		vcmpe.f32	s14, s16
 373              		.loc 9 143 35 view .LVU101
 374 0058 CCBF     		ite	gt
 375 005a 0123     		movgt	r3, #1
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 19


 376 005c 0023     		movle	r3, #0
 377              		.loc 9 143 54 view .LVU102
 378 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 379              		.loc 9 143 42 view .LVU103
 380 0062 03F00103 		and	r3, r3, #1
 381 0066 58BF     		it	pl
 382 0068 0023     		movpl	r3, #0
 383              		.loc 9 143 23 view .LVU104
 384 006a 38FE000A 		vselgt.f32	s0, s16, s0
 385              		.loc 9 143 42 view .LVU105
 386 006e 07EE903A 		vmov	s15, r3	@ int
 387              		.loc 9 143 61 view .LVU106
 388 0072 F8EEE77A 		vcvt.f32.s32	s15, s15
 389 0076 67EE877A 		vmul.f32	s15, s15, s14
 390              		.loc 9 143 23 view .LVU107
 391 007a 37EE800A 		vadd.f32	s0, s15, s0
 392 007e FFF7FEFF 		bl	_ZN8Dattorro11setPreDelayEf
 393              	.LVL15:
 144:PlateauTest.cpp ****     reverb.setInputFilterLowCutoffPitch(inputDampLow);
 394              		.loc 9 144 5 is_stmt 1 view .LVU108
 395              		.loc 9 144 40 is_stmt 0 view .LVU109
 396 0082 424B     		ldr	r3, .L29+44
 397 0084 3C48     		ldr	r0, .L29+24
 398 0086 93ED000A 		vldr.32	s0, [r3]
 399 008a FFF7FEFF 		bl	_ZN8Dattorro28setInputFilterLowCutoffPitchEf
 400              	.LVL16:
 145:PlateauTest.cpp ****     reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 401              		.loc 9 145 5 is_stmt 1 view .LVU110
 402              		.loc 9 145 41 is_stmt 0 view .LVU111
 403 008e 404B     		ldr	r3, .L29+48
 404 0090 3948     		ldr	r0, .L29+24
 405 0092 93ED000A 		vldr.32	s0, [r3]
 406 0096 FFF7FEFF 		bl	_ZN8Dattorro29setInputFilterHighCutoffPitchEf
 407              	.LVL17:
 146:PlateauTest.cpp ****     reverb.enableInputDiffusion(diffuseInput > 0.5f);
 408              		.loc 9 146 5 is_stmt 1 view .LVU112
 409              		.loc 9 146 32 is_stmt 0 view .LVU113
 410 009a 3E4B     		ldr	r3, .L29+52
 411 009c B6EE007A 		vmov.f32	s14, #5.0e-1
 412 00a0 3548     		ldr	r0, .L29+24
 413 00a2 D3ED007A 		vldr.32	s15, [r3]	@ int
 414 00a6 F8EEE77A 		vcvt.f32.s32	s15, s15
 415 00aa F4EEC77A 		vcmpe.f32	s15, s14
 416 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 417 00b2 CCBF     		ite	gt
 418 00b4 0121     		movgt	r1, #1
 419 00b6 0021     		movle	r1, #0
 420 00b8 FFF7FEFF 		bl	_ZN8Dattorro20enableInputDiffusionEb
 421              	.LVL18:
 147:PlateauTest.cpp ****     reverb.setDecay(decay);
 422              		.loc 9 147 5 is_stmt 1 view .LVU114
 423              		.loc 9 147 20 is_stmt 0 view .LVU115
 424 00bc 364B     		ldr	r3, .L29+56
 425 00be 2E48     		ldr	r0, .L29+24
 426 00c0 93ED000A 		vldr.32	s0, [r3]
 427 00c4 FFF7FEFF 		bl	_ZN8Dattorro8setDecayEf
 428              	.LVL19:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 20


 148:PlateauTest.cpp ****     reverb.setTankDiffusion(diffusion);
 429              		.loc 9 148 5 is_stmt 1 view .LVU116
 430              		.loc 9 148 28 is_stmt 0 view .LVU117
 431 00c8 344B     		ldr	r3, .L29+60
 432 00ca 2B48     		ldr	r0, .L29+24
 433 00cc 93ED000A 		vldr.32	s0, [r3]
 434 00d0 FFF7FEFF 		bl	_ZN8Dattorro16setTankDiffusionEf
 435              	.LVL20:
 149:PlateauTest.cpp ****     reverb.setTankFilterLowCutFrequency(reverbDampLow);
 436              		.loc 9 149 5 is_stmt 1 view .LVU118
 437              		.loc 9 149 40 is_stmt 0 view .LVU119
 438 00d4 324B     		ldr	r3, .L29+64
 439 00d6 2848     		ldr	r0, .L29+24
 440 00d8 93ED000A 		vldr.32	s0, [r3]
 441 00dc FFF7FEFF 		bl	_ZN8Dattorro28setTankFilterLowCutFrequencyEf
 442              	.LVL21:
 150:PlateauTest.cpp ****     reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 443              		.loc 9 150 5 is_stmt 1 view .LVU120
 444              		.loc 9 150 41 is_stmt 0 view .LVU121
 445 00e0 304B     		ldr	r3, .L29+68
 446 00e2 2548     		ldr	r0, .L29+24
 447 00e4 93ED000A 		vldr.32	s0, [r3]
 448 00e8 FFF7FEFF 		bl	_ZN8Dattorro29setTankFilterHighCutFrequencyEf
 449              	.LVL22:
 151:PlateauTest.cpp ****     reverb.setTankModSpeed(modSpeed);
 450              		.loc 9 151 5 is_stmt 1 view .LVU122
 451              		.loc 9 151 27 is_stmt 0 view .LVU123
 452 00ec 2E4B     		ldr	r3, .L29+72
 453 00ee 2248     		ldr	r0, .L29+24
 454 00f0 93ED000A 		vldr.32	s0, [r3]
 455 00f4 FFF7FEFF 		bl	_ZN8Dattorro15setTankModSpeedEf
 456              	.LVL23:
 152:PlateauTest.cpp ****     reverb.setTankModDepth(modDepth);
 457              		.loc 9 152 5 is_stmt 1 view .LVU124
 458              		.loc 9 152 27 is_stmt 0 view .LVU125
 459 00f8 2C4B     		ldr	r3, .L29+76
 460 00fa 1F48     		ldr	r0, .L29+24
 461 00fc 93ED000A 		vldr.32	s0, [r3]
 462 0100 FFF7FEFF 		bl	_ZN8Dattorro15setTankModDepthEf
 463              	.LVL24:
 153:PlateauTest.cpp ****     reverb.setTankModShape(modShape);
 464              		.loc 9 153 5 is_stmt 1 view .LVU126
 465              		.loc 9 153 27 is_stmt 0 view .LVU127
 466 0104 2A4B     		ldr	r3, .L29+80
 467 0106 1C48     		ldr	r0, .L29+24
 468 0108 93ED000A 		vldr.32	s0, [r3]
 469 010c FFF7FEFF 		bl	_ZN8Dattorro15setTankModShapeEf
 470              	.LVL25:
 154:PlateauTest.cpp **** 
 155:PlateauTest.cpp **** 	hw.SetAudioBlockSize(48); // number of samples handled per callback
 471              		.loc 9 155 2 is_stmt 1 view .LVU128
 472              		.loc 9 155 22 is_stmt 0 view .LVU129
 473 0110 3021     		movs	r1, #48
 474 0112 1648     		ldr	r0, .L29+12
 475 0114 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio17SetAudioBlockSizeEj
 476              	.LVL26:
 156:PlateauTest.cpp **** 	//hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 21


 157:PlateauTest.cpp **** 
 158:PlateauTest.cpp ****     
 159:PlateauTest.cpp ****     hw.StartAudio(AudioCallback);
 477              		.loc 9 159 5 is_stmt 1 view .LVU130
 478              		.loc 9 159 18 is_stmt 0 view .LVU131
 479 0118 1448     		ldr	r0, .L29+12
 480 011a 2649     		ldr	r1, .L29+84
 481 011c FFF7FEFF 		bl	_ZN5daisy11DaisyVersio10StartAudioEPFvPKfPfjE
 482              	.LVL27:
 160:PlateauTest.cpp **** 	hw.StartAdc();
 483              		.loc 9 160 2 is_stmt 1 view .LVU132
 484              		.loc 9 160 13 is_stmt 0 view .LVU133
 485 0120 1248     		ldr	r0, .L29+12
 486 0122 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio8StartAdcEv
 487              	.LVL28:
 488              	.L21:
 161:PlateauTest.cpp **** 
 162:PlateauTest.cpp **** 	while(1) {
 489              		.loc 9 162 2 is_stmt 1 view .LVU134
 163:PlateauTest.cpp ****         hw.ProcessAnalogControls();
 490              		.loc 9 163 9 view .LVU135
 491              		.loc 9 163 33 is_stmt 0 view .LVU136
 492 0126 1148     		ldr	r0, .L29+12
 493 0128 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio21ProcessAnalogControlsEv
 494              	.LVL29:
 164:PlateauTest.cpp ****         hw.UpdateExample(); // Control the LED colors using the knobs and gate inputs
 495              		.loc 9 164 9 is_stmt 1 view .LVU137
 496              		.loc 9 164 25 is_stmt 0 view .LVU138
 497 012c 0F48     		ldr	r0, .L29+12
 498 012e FFF7FEFF 		bl	_ZN5daisy11DaisyVersio13UpdateExampleEv
 499              	.LVL30:
 165:PlateauTest.cpp ****         hw.UpdateLeds();
 500              		.loc 9 165 9 is_stmt 1 view .LVU139
 501              		.loc 9 165 22 is_stmt 0 view .LVU140
 502 0132 0E48     		ldr	r0, .L29+12
 503 0134 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio10UpdateLedsEv
 504              	.LVL31:
 166:PlateauTest.cpp **** 
 167:PlateauTest.cpp ****             if(initEnvelope < 1.f)
 505              		.loc 9 167 13 is_stmt 1 view .LVU141
 168:PlateauTest.cpp ****                 initEnvelope += 0.00001;
 506              		.loc 9 168 17 view .LVU142
 167:PlateauTest.cpp ****                 initEnvelope += 0.00001;
 507              		.loc 9 167 13 is_stmt 0 view .LVU143
 508 0138 F7EE007A 		vmov.f32	s15, #1.0e+0
 167:PlateauTest.cpp ****                 initEnvelope += 0.00001;
 509              		.loc 9 167 29 view .LVU144
 510 013c 94ED007A 		vldr.32	s14, [r4]
 167:PlateauTest.cpp ****                 initEnvelope += 0.00001;
 511              		.loc 9 167 13 view .LVU145
 512 0140 B4EEE77A 		vcmpe.f32	s14, s15
 513              		.loc 9 168 30 view .LVU146
 514 0144 9FED066B 		vldr.64	d6, .L29
 167:PlateauTest.cpp ****                 initEnvelope += 0.00001;
 515              		.loc 9 167 13 view .LVU147
 516 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 517 014c 05D5     		bpl	.L22
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 22


 518              		.loc 9 168 30 view .LVU148
 519 014e B7EEC77A 		vcvt.f64.f32	d7, s14
 520 0152 37EE067B 		vadd.f64	d7, d7, d6
 521 0156 F7EEC77B 		vcvt.f32.f64	s15, d7
 522              	.L22:
 523 015a C4ED007A 		vstr.32	s15, [r4]
 524 015e E2E7     		b	.L21
 525              	.L30:
 526              		.align	3
 527              	.L29:
 528 0160 F168E388 		.word	-1998362383
 529 0164 B5F8E43E 		.word	1055193269
 530 0168 00000000 		.word	.LANCHOR7
 531 016c 00000000 		.word	.LANCHOR6
 532 0170 00000000 		.word	.LANCHOR20
 533 0174 00803B47 		.word	1195081728
 534 0178 00000000 		.word	.LANCHOR1
 535 017c 6F12833B 		.word	998445679
 536 0180 00000000 		.word	.LANCHOR8
 537 0184 00000000 		.word	.LANCHOR9
 538 0188 00000000 		.word	0
 539 018c 00000000 		.word	.LANCHOR10
 540 0190 00000000 		.word	.LANCHOR11
 541 0194 00000000 		.word	.LANCHOR12
 542 0198 00000000 		.word	.LANCHOR13
 543 019c 00000000 		.word	.LANCHOR14
 544 01a0 00000000 		.word	.LANCHOR15
 545 01a4 00000000 		.word	.LANCHOR16
 546 01a8 00000000 		.word	.LANCHOR17
 547 01ac 00000000 		.word	.LANCHOR18
 548 01b0 00000000 		.word	.LANCHOR19
 549 01b4 00000000 		.word	_Z13AudioCallbackPKfPfj
 550              		.cfi_endproc
 551              	.LFE4774:
 553              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 554              		.align	1
 555              		.p2align 2,,3
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv5-d16
 561              	_GLOBAL__sub_I_hw:
 562              	.LFB5426:
 169:PlateauTest.cpp ****             else
 170:PlateauTest.cpp ****                 initEnvelope = 1.f;
 171:PlateauTest.cpp **** 
 172:PlateauTest.cpp ****     }
 173:PlateauTest.cpp **** }
 563              		.loc 9 173 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              	.LBB269:
 568              	.LBI269:
 569              		.loc 9 173 1 view .LVU150
 570              	.LVL32:
 571              	.LBB270:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 23


 572              	.LBB271:
 573              	.LBI271:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 574              		.loc 1 45 5 view .LVU151
 575              	.LBB272:
 576              	.LBB273:
 577              	.LBI273:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 578              		.loc 4 21 5 view .LVU152
 579              	.LBB274:
 580              	.LBB275:
 581              	.LBI275:
 582              		.file 10 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 24


  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 25


 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 26


 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 583              		.loc 10 166 5 view .LVU153
 584              		.loc 10 166 5 is_stmt 0 view .LVU154
 585              	.LBE275:
 586              	.LBB280:
 587              	.LBI280:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 588              		.loc 8 95 5 is_stmt 1 view .LVU155
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 589              		.loc 8 95 5 is_stmt 0 view .LVU156
 590              	.LBE280:
 591              	.LBB283:
 592              	.LBI283:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 593              		.loc 7 109 5 is_stmt 1 view .LVU157
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 594              		.loc 7 109 5 is_stmt 0 view .LVU158
 595              	.LBE283:
 596              	.LBB284:
 597              	.LBI284:
 598              		.file 11 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 27


  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 599              		.loc 11 84 5 is_stmt 1 view .LVU159
 600              		.loc 11 84 5 is_stmt 0 view .LVU160
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 28


 601              	.LBE284:
 602              	.LBB287:
 603              	.LBI287:
  40:../../libDaisy//src/hid/usb.h **** 
 604              		.loc 6 40 5 is_stmt 1 view .LVU161
  40:../../libDaisy//src/hid/usb.h **** 
 605              		.loc 6 40 5 is_stmt 0 view .LVU162
 606              	.LBE287:
 607              	.LBB288:
 608              	.LBI288:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 609              		.loc 5 96 5 is_stmt 1 view .LVU163
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 610              		.loc 5 96 5 is_stmt 0 view .LVU164
 611              	.LBE288:
 612              	.LBB289:
 613              	.LBI289:
 614              		.file 12 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 29


  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 30


  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 615              		.loc 12 108 5 is_stmt 1 view .LVU165
 616              		.loc 12 108 5 is_stmt 0 view .LVU166
 617              	.LBE289:
 618              	.LBE274:
 619              	.LBE273:
 620              	.LBE272:
 621              	.LBE271:
 622              	.LBE270:
 623              	.LBE269:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 624              		.loc 1 45 19 is_stmt 1 view .LVU167
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 625              		.loc 1 45 19 view .LVU168
 626              	.LBB327:
 627              	.LBB323:
 628              	.LBB320:
 629              	.LBB317:
 630              	.LBB299:
 631              	.LBI299:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 632              		.loc 3 41 5 view .LVU169
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 633              		.loc 3 41 5 is_stmt 0 view .LVU170
 634              	.LBE299:
 635              	.LBB300:
 636              	.LBI300:
  18:../../libDaisy//src/hid/gatein.h **** 
 637              		.loc 2 18 5 is_stmt 1 view .LVU171
 638              	.LBB301:
 639              	.LBB302:
 640              	.LBI302:
 641              		.file 13 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 31


  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 32


  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 642              		.loc 13 74 5 view .LVU172
 643              	.LBB303:
 644              	.LBB304:
 645              	.LBI304:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 646              		.loc 13 68 9 view .LVU173
 647              	.LBB305:
 648              	.LBB306:
 649              	.LBB307:
 650              	.LBI307:
 651              		.file 14 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 33


  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 34


 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 35


 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 36


 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 37


 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 652              		.loc 14 272 15 view .LVU174
 653              		.loc 14 272 15 is_stmt 0 view .LVU175
 654              	.LBE307:
 655              	.LBE306:
 656              	.LBE305:
 657              	.LBE304:
 658              	.LBE303:
 659              	.LBE302:
 660              	.LBE301:
 661              	.LBE300:
 662              	.LBE317:
 663              	.LBE320:
 664              	.LBE323:
 665              	.LBE327:
 666              		.loc 9 173 1 view .LVU176
 667 0000 10B5     		push	{r4, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 4, -8
 670              		.cfi_offset 14, -4
 671              	.LBB328:
 672              	.LBB324:
 673              	.LBB321:
 674              	.LBB318:
 675              	.LBB314:
 676              	.LBB297:
 677              	.LBB292:
 678              	.LBB276:
 679              	.LBB277:
 680              		.loc 10 166 34 view .LVU177
 681 0002 0023     		movs	r3, #0
 682 0004 0E48     		ldr	r0, .L33
 683              	.LBE277:
 684              	.LBE276:
 685              	.LBE292:
 686              	.LBE297:
 687              	.LBE314:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 688              		.loc 1 45 19 view .LVU178
 689 0006 4FF60B74 		movw	r4, #65291
 690              	.LBE318:
 691              	.LBE321:
  11:PlateauTest.cpp **** 
 692              		.loc 9 11 13 view .LVU179
 693 000a 0E4A     		ldr	r2, .L33+4
 694 000c 0E49     		ldr	r1, .L33+8
 695              	.LBB322:
 696              	.LBB319:
 697              	.LBB315:
 698              	.LBB298:
 699              	.LBB293:
 700              	.LBB279:
 701              	.LBB278:
 702              		.loc 10 166 34 view .LVU180
 703 000e 0360     		str	r3, [r0]
 704              	.LBE278:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 38


 705              	.LBE279:
 706              	.LBE293:
 707              	.LBB294:
 708              	.LBB281:
 709              	.LBB282:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 710              		.loc 8 95 35 view .LVU181
 711 0010 4361     		str	r3, [r0, #20]
 712              	.LBE282:
 713              	.LBE281:
 714              	.LBE294:
 715              	.LBB295:
 716              	.LBB285:
 717              	.LBB286:
 718              		.loc 11 84 33 view .LVU182
 719 0012 0362     		str	r3, [r0, #32]
 720              	.LBE286:
 721              	.LBE285:
 722              	.LBE295:
 723              	.LBB296:
 724              	.LBB290:
 725              	.LBB291:
 726              		.loc 12 108 33 view .LVU183
 727 0014 C363     		str	r3, [r0, #60]
 728              	.LBE291:
 729              	.LBE290:
 730              	.LBE296:
 731              	.LBE298:
 732              	.LBE315:
 733              	.LBB316:
 734              	.LBB313:
 735              	.LBB312:
 736              	.LBB311:
 737              	.LBB310:
 738              	.LBB309:
 739              	.LBB308:
  69:../../libDaisy//src/per/gpio.h ****         {
 740              		.loc 13 69 73 view .LVU184
 741 0016 C0E9A043 		strd	r4, r3, [r0, #640]
 742 001a C0E9A233 		strd	r3, r3, [r0, #648]
 743              	.LVL33:
  69:../../libDaisy//src/per/gpio.h ****         {
 744              		.loc 13 69 73 view .LVU185
 745              	.LBE308:
 746              	.LBE309:
 747              	.LBE310:
 748              	.LBE311:
 749              	.LBE312:
 750              	.LBE313:
 751              	.LBE316:
 752              	.LBE319:
 753              	.LBE322:
 754              	.LBE324:
 755              	.LBE328:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 756              		.loc 1 45 19 is_stmt 1 view .LVU186
 757              	.LBB329:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 39


 758              	.LBB325:
  11:PlateauTest.cpp **** 
 759              		.loc 9 11 13 is_stmt 0 view .LVU187
 760 001e FFF7FEFF 		bl	__aeabi_atexit
 761              	.LVL34:
  76:PlateauTest.cpp **** LinearEnvelope envelope;
 762              		.loc 9 76 10 view .LVU188
 763 0022 B7EE001A 		vmov.f32	s2, #1.0e+0
 764 0026 F3EE000A 		vmov.f32	s1, #1.6e+1
 765 002a 9FED080A 		vldr.32	s0, .L33+12
 766 002e 0848     		ldr	r0, .L33+16
 767 0030 FFF7FEFF 		bl	_ZN8DattorroC1Efff
 768              	.LVL35:
  77:PlateauTest.cpp **** 
 769              		.loc 9 77 16 view .LVU189
 770 0034 0748     		ldr	r0, .L33+20
 771              	.LBE325:
 772              	.LBE329:
 773              		.loc 9 173 1 view .LVU190
 774 0036 BDE81040 		pop	{r4, lr}
 775              		.cfi_restore 14
 776              		.cfi_restore 4
 777              		.cfi_def_cfa_offset 0
 778              	.LBB330:
 779              	.LBB326:
  77:PlateauTest.cpp **** 
 780              		.loc 9 77 16 view .LVU191
 781 003a FFF7FEBF 		b	_ZN14LinearEnvelopeC1Ev
 782              	.LVL36:
 783              	.L34:
 784 003e 00BF     		.align	2
 785              	.L33:
 786 0040 00000000 		.word	.LANCHOR6
 787 0044 00000000 		.word	__dso_handle
 788 0048 00000000 		.word	_ZN5daisy11DaisyVersioD1Ev
 789 004c 00803B47 		.word	1195081728
 790 0050 00000000 		.word	.LANCHOR1
 791 0054 00000000 		.word	.LANCHOR7
 792              	.LBE326:
 793              	.LBE330:
 794              		.cfi_endproc
 795              	.LFE5426:
 797              		.section	.init_array,"aw",%init_array
 798              		.align	2
 799 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 800              		.global	initEnvelope
 801              		.global	rightOutput
 802              		.global	leftOutput
 803              		.global	rightInput
 804              		.global	leftInput
 805              		.global	diffuseInput
 806              		.global	tuned
 807              		.global	panelStyle
 808              		.global	envelope
 809              		.global	reverb
 810              		.global	fadeIn
 811              		.global	fadeOut
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 40


 812              		.global	cleared
 813              		.global	clear
 814              		.global	softDriveOutput
 815              		.global	inputSensitivityState
 816              		.global	preDelayCVSensState
 817              		.global	diffuseButtonState
 818              		.global	tunedButtonState
 819              		.global	frozen
 820              		.global	freeze
 821              		.global	freezeToggleButtonState
 822              		.global	freezeToggle
 823              		.global	freezeButtonState
 824              		.global	modDepth
 825              		.global	modShape
 826              		.global	modSpeed
 827              		.global	reverbDampHigh
 828              		.global	reverbDampLow
 829              		.global	inputDampHigh
 830              		.global	inputDampLow
 831              		.global	inputSensitivity
 832              		.global	decay
 833              		.global	diffusion
 834              		.global	timeScale
 835              		.global	preDelayCVSens
 836              		.global	preDelay
 837              		.global	dry
 838              		.global	wet
 839              		.global	hw
 840              		.section	.bss.clear,"aw",%nobits
 843              	clear:
 844 0000 00       		.space	1
 845              		.section	.bss.envelope,"aw",%nobits
 846              		.align	2
 847              		.set	.LANCHOR7,. + 0
 850              	envelope:
 851 0000 00000000 		.space	40
 851      00000000 
 851      00000000 
 851      00000000 
 851      00000000 
 852              		.section	.bss.fadeIn,"aw",%nobits
 855              	fadeIn:
 856 0000 00       		.space	1
 857              		.section	.bss.fadeOut,"aw",%nobits
 860              	fadeOut:
 861 0000 00       		.space	1
 862              		.section	.bss.freeze,"aw",%nobits
 865              	freeze:
 866 0000 00       		.space	1
 867              		.section	.bss.freezeButtonState,"aw",%nobits
 870              	freezeButtonState:
 871 0000 00       		.space	1
 872              		.section	.bss.freezeToggle,"aw",%nobits
 875              	freezeToggle:
 876 0000 00       		.space	1
 877              		.section	.bss.freezeToggleButtonState,"aw",%nobits
 880              	freezeToggleButtonState:
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 41


 881 0000 00       		.space	1
 882              		.section	.bss.frozen,"aw",%nobits
 885              	frozen:
 886 0000 00       		.space	1
 887              		.section	.bss.hw,"aw",%nobits
 888              		.align	2
 889              		.set	.LANCHOR6,. + 0
 892              	hw:
 893 0000 00000000 		.space	680
 893      00000000 
 893      00000000 
 893      00000000 
 893      00000000 
 894              		.section	.bss.initEnvelope,"aw",%nobits
 895              		.align	2
 896              		.set	.LANCHOR20,. + 0
 899              	initEnvelope:
 900 0000 00000000 		.space	4
 901              		.section	.bss.inputDampLow,"aw",%nobits
 902              		.align	2
 903              		.set	.LANCHOR10,. + 0
 906              	inputDampLow:
 907 0000 00000000 		.space	4
 908              		.section	.bss.inputSensitivityState,"aw",%nobits
 909              		.align	2
 912              	inputSensitivityState:
 913 0000 00000000 		.space	4
 914              		.section	.bss.leftInput,"aw",%nobits
 915              		.align	2
 918              	leftInput:
 919 0000 00000000 		.space	4
 920              		.section	.bss.leftOutput,"aw",%nobits
 921              		.align	2
 922              		.set	.LANCHOR2,. + 0
 925              	leftOutput:
 926 0000 00000000 		.space	4
 927              		.section	.bss.modDepth,"aw",%nobits
 928              		.align	2
 929              		.set	.LANCHOR18,. + 0
 932              	modDepth:
 933 0000 00000000 		.space	4
 934              		.section	.bss.panelStyle,"aw",%nobits
 935              		.align	2
 938              	panelStyle:
 939 0000 00000000 		.space	4
 940              		.section	.bss.preDelay,"aw",%nobits
 941              		.align	2
 942              		.set	.LANCHOR9,. + 0
 945              	preDelay:
 946 0000 00000000 		.space	4
 947              		.section	.bss.preDelayCVSensState,"aw",%nobits
 948              		.align	2
 951              	preDelayCVSensState:
 952 0000 00000000 		.space	4
 953              		.section	.bss.reverb,"aw",%nobits
 954              		.align	2
 955              		.set	.LANCHOR1,. + 0
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 42


 958              	reverb:
 959 0000 00000000 		.space	1384
 959      00000000 
 959      00000000 
 959      00000000 
 959      00000000 
 960              		.section	.bss.reverbDampLow,"aw",%nobits
 961              		.align	2
 962              		.set	.LANCHOR15,. + 0
 965              	reverbDampLow:
 966 0000 00000000 		.space	4
 967              		.section	.bss.rightInput,"aw",%nobits
 968              		.align	2
 971              	rightInput:
 972 0000 00000000 		.space	4
 973              		.section	.bss.rightOutput,"aw",%nobits
 974              		.align	2
 975              		.set	.LANCHOR3,. + 0
 978              	rightOutput:
 979 0000 00000000 		.space	4
 980              		.section	.bss.softDriveOutput,"aw",%nobits
 983              	softDriveOutput:
 984 0000 00       		.space	1
 985              		.section	.bss.tuned,"aw",%nobits
 986              		.align	2
 989              	tuned:
 990 0000 00000000 		.space	4
 991              		.section	.bss.tunedButtonState,"aw",%nobits
 994              	tunedButtonState:
 995 0000 00       		.space	1
 996              		.section	.data.cleared,"aw"
 999              	cleared:
 1000 0000 01       		.byte	1
 1001              		.section	.data.decay,"aw"
 1002              		.align	2
 1003              		.set	.LANCHOR13,. + 0
 1006              	decay:
 1007 0000 0000003F 		.word	1056964608
 1008              		.section	.data.diffuseButtonState,"aw"
 1011              	diffuseButtonState:
 1012 0000 01       		.byte	1
 1013              		.section	.data.diffuseInput,"aw"
 1014              		.align	2
 1015              		.set	.LANCHOR12,. + 0
 1018              	diffuseInput:
 1019 0000 01000000 		.word	1
 1020              		.section	.data.diffusion,"aw"
 1021              		.align	2
 1022              		.set	.LANCHOR14,. + 0
 1025              	diffusion:
 1026 0000 0000803F 		.word	1065353216
 1027              		.section	.data.dry,"aw"
 1028              		.align	2
 1029              		.set	.LANCHOR4,. + 0
 1032              	dry:
 1033 0000 0000803F 		.word	1065353216
 1034              		.section	.data.inputDampHigh,"aw"
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 43


 1035              		.align	2
 1036              		.set	.LANCHOR11,. + 0
 1039              	inputDampHigh:
 1040 0000 00002041 		.word	1092616192
 1041              		.section	.data.inputSensitivity,"aw"
 1042              		.align	2
 1043              		.set	.LANCHOR0,. + 0
 1046              	inputSensitivity:
 1047 0000 F9E9003E 		.word	1040247289
 1048              		.section	.data.modShape,"aw"
 1049              		.align	2
 1050              		.set	.LANCHOR19,. + 0
 1053              	modShape:
 1054 0000 0000003F 		.word	1056964608
 1055              		.section	.data.modSpeed,"aw"
 1056              		.align	2
 1057              		.set	.LANCHOR17,. + 0
 1060              	modSpeed:
 1061 0000 CDCCCC3D 		.word	1036831949
 1062              		.section	.data.preDelayCVSens,"aw"
 1063              		.align	2
 1066              	preDelayCVSens:
 1067 0000 CDCCCC3D 		.word	1036831949
 1068              		.section	.data.reverbDampHigh,"aw"
 1069              		.align	2
 1070              		.set	.LANCHOR16,. + 0
 1073              	reverbDampHigh:
 1074 0000 00002041 		.word	1092616192
 1075              		.section	.data.timeScale,"aw"
 1076              		.align	2
 1077              		.set	.LANCHOR8,. + 0
 1080              	timeScale:
 1081 0000 0000803F 		.word	1065353216
 1082              		.section	.data.wet,"aw"
 1083              		.align	2
 1084              		.set	.LANCHOR5,. + 0
 1087              	wet:
 1088 0000 0000003F 		.word	1056964608
 1089              		.text
 1090              	.Letext0:
 1091              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1092              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1093              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1094              		.file 18 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1095              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1096              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1097              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1098              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1099              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1100              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1101              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1102              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1103              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1104              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1105              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1106              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1107              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 44


 1108              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1109              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1110              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1111              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1112              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
 1113              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1114              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1115              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1116              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1117              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1118              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1119              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1120              		.file 44 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1121              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1122              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1123              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1124              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1125              		.file 49 "../../libDaisy//src/per/tim.h"
 1126              		.file 50 "../../libDaisy//src/hid/switch3.h"
 1127              		.file 51 "../../libDaisy//src/hid/ctrl.h"
 1128              		.file 52 "../../libDaisy//src/util/wav_format.h"
 1129              		.file 53 "../../libDaisy//src/hid/led.h"
 1130              		.file 54 "../../libDaisy//src/util/color.h"
 1131              		.file 55 "../../libDaisy//src/hid/rgb_led.h"
 1132              		.file 56 "../../libDaisy//src/dev/max11300.h"
 1133              		.file 57 "../../libDaisy//src/dev/sdram.h"
 1134              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1135              		.file 59 "../../DaisySP//Source/Control/adenv.h"
 1136              		.file 60 "../../DaisySP//Source/Utility/dsp.h"
 1137              		.file 61 "dsp/delays/InterpDelay.hpp"
 1138              		.file 62 "dsp/delays/AllpassFilter.hpp"
 1139              		.file 63 "dsp/filters/OnePoleFilters.hpp"
 1140              		.file 64 "dsp/modulation/LFO.hpp"
 1141              		.file 65 "Dattorro.hpp"
 1142              		.file 66 "dsp/modulation/LinearEnvelope.hpp"
 1143              		.file 67 "../../libDaisy//src/dev/sr_595.h"
 1144              		.file 68 "<built-in>"
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 PlateauTest.cpp
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:17     .text._ZN5daisy11DaisyVersioD2Ev:00000000 $t
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:26     .text._ZN5daisy11DaisyVersioD2Ev:00000000 _ZN5daisy11DaisyVersioD2Ev
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:26     .text._ZN5daisy11DaisyVersioD2Ev:00000000 _ZN5daisy11DaisyVersioD1Ev
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:84     .text._Z13AudioCallbackPKfPfj:00000000 $t
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:92     .text._Z13AudioCallbackPKfPfj:00000000 _Z13AudioCallbackPKfPfj
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:285    .text._Z13AudioCallbackPKfPfj:000000f4 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:297    .text.startup.main:00000000 $t
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:305    .text.startup.main:00000000 main
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:528    .text.startup.main:00000160 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:554    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:561    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:786    .text.startup._GLOBAL__sub_I_hw:00000040 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:798    .init_array:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:899    .bss.initEnvelope:00000000 initEnvelope
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:978    .bss.rightOutput:00000000 rightOutput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:925    .bss.leftOutput:00000000 leftOutput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:971    .bss.rightInput:00000000 rightInput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:918    .bss.leftInput:00000000 leftInput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1018   .data.diffuseInput:00000000 diffuseInput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:989    .bss.tuned:00000000 tuned
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:938    .bss.panelStyle:00000000 panelStyle
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:850    .bss.envelope:00000000 envelope
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:958    .bss.reverb:00000000 reverb
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:855    .bss.fadeIn:00000000 fadeIn
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:860    .bss.fadeOut:00000000 fadeOut
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:999    .data.cleared:00000000 cleared
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:843    .bss.clear:00000000 clear
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:983    .bss.softDriveOutput:00000000 softDriveOutput
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:912    .bss.inputSensitivityState:00000000 inputSensitivityState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:951    .bss.preDelayCVSensState:00000000 preDelayCVSensState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1011   .data.diffuseButtonState:00000000 diffuseButtonState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:994    .bss.tunedButtonState:00000000 tunedButtonState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:885    .bss.frozen:00000000 frozen
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:865    .bss.freeze:00000000 freeze
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:880    .bss.freezeToggleButtonState:00000000 freezeToggleButtonState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:875    .bss.freezeToggle:00000000 freezeToggle
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:870    .bss.freezeButtonState:00000000 freezeButtonState
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:932    .bss.modDepth:00000000 modDepth
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1053   .data.modShape:00000000 modShape
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1060   .data.modSpeed:00000000 modSpeed
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1073   .data.reverbDampHigh:00000000 reverbDampHigh
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:965    .bss.reverbDampLow:00000000 reverbDampLow
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1039   .data.inputDampHigh:00000000 inputDampHigh
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:906    .bss.inputDampLow:00000000 inputDampLow
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1046   .data.inputSensitivity:00000000 inputSensitivity
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1006   .data.decay:00000000 decay
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1025   .data.diffusion:00000000 diffusion
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1080   .data.timeScale:00000000 timeScale
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1066   .data.preDelayCVSens:00000000 preDelayCVSens
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:945    .bss.preDelay:00000000 preDelay
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1032   .data.dry:00000000 dry
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1087   .data.wet:00000000 wet
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:892    .bss.hw:00000000 hw
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:844    .bss.clear:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:846    .bss.envelope:00000000 $d
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 46


C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:856    .bss.fadeIn:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:861    .bss.fadeOut:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:866    .bss.freeze:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:871    .bss.freezeButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:876    .bss.freezeToggle:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:881    .bss.freezeToggleButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:886    .bss.frozen:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:888    .bss.hw:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:895    .bss.initEnvelope:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:902    .bss.inputDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:909    .bss.inputSensitivityState:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:915    .bss.leftInput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:921    .bss.leftOutput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:928    .bss.modDepth:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:935    .bss.panelStyle:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:941    .bss.preDelay:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:948    .bss.preDelayCVSensState:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:954    .bss.reverb:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:961    .bss.reverbDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:968    .bss.rightInput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:974    .bss.rightOutput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:984    .bss.softDriveOutput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:986    .bss.tuned:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:995    .bss.tunedButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1002   .data.decay:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1014   .data.diffuseInput:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1021   .data.diffusion:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1028   .data.dry:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1035   .data.inputDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1042   .data.inputSensitivity:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1049   .data.modShape:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1056   .data.modSpeed:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1063   .data.preDelayCVSens:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1069   .data.reverbDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1076   .data.timeScale:00000000 $d
C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s:1083   .data.wet:00000000 $d
                           .group:00000000 _ZN5daisy11DaisyVersioD5Ev

UNDEFINED SYMBOLS
_ZN8Dattorro7processEff
_ZNK8Dattorro13getLeftOutputEv
_ZNK8Dattorro14getRightOutputEv
_ZN5daisy11DaisyVersio4InitEb
_ZN8Dattorro13setSampleRateEf
_ZN14LinearEnvelope13setSampleRateEf
_ZN14LinearEnvelope7setTimeEf
_ZN8Dattorro12setTimeScaleEf
_ZN8Dattorro11setPreDelayEf
_ZN8Dattorro28setInputFilterLowCutoffPitchEf
_ZN8Dattorro29setInputFilterHighCutoffPitchEf
_ZN8Dattorro20enableInputDiffusionEb
_ZN8Dattorro8setDecayEf
_ZN8Dattorro16setTankDiffusionEf
_ZN8Dattorro28setTankFilterLowCutFrequencyEf
_ZN8Dattorro29setTankFilterHighCutFrequencyEf
_ZN8Dattorro15setTankModSpeedEf
_ZN8Dattorro15setTankModDepthEf
ARM GAS  C:\Users\digit\AppData\Local\Temp\ccRuGVuJ.s 			page 47


_ZN8Dattorro15setTankModShapeEf
_ZN5daisy11DaisyVersio17SetAudioBlockSizeEj
_ZN5daisy11DaisyVersio10StartAudioEPFvPKfPfjE
_ZN5daisy11DaisyVersio8StartAdcEv
_ZN5daisy11DaisyVersio21ProcessAnalogControlsEv
_ZN5daisy11DaisyVersio13UpdateExampleEv
_ZN5daisy11DaisyVersio10UpdateLedsEv
__aeabi_atexit
_ZN8DattorroC1Efff
_ZN14LinearEnvelopeC1Ev
__dso_handle
