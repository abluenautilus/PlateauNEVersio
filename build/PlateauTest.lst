ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"PlateauTest.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy11DaisyVersioD2Ev,"axG",%progbits,_ZN5daisy11DaisyVersioD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy11DaisyVersioD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy11DaisyVersioD2Ev:
  27              	.LVL0:
  28              	.LFB3519:
  29              		.file 1 "../../libDaisy//src/daisy_versio.h"
   1:../../libDaisy//src/daisy_versio.h **** #pragma once
   2:../../libDaisy//src/daisy_versio.h **** #include "daisy_seed.h"
   3:../../libDaisy//src/daisy_versio.h **** 
   4:../../libDaisy//src/daisy_versio.h **** namespace daisy
   5:../../libDaisy//src/daisy_versio.h **** {
   6:../../libDaisy//src/daisy_versio.h **** /**
   7:../../libDaisy//src/daisy_versio.h ****     @brief Class that handles initializing all of the hardware specific to the Desmodus Versio hard
   8:../../libDaisy//src/daisy_versio.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
   9:../../libDaisy//src/daisy_versio.h ****     @author Ankoor Apte, Noise Engineering
  10:../../libDaisy//src/daisy_versio.h ****     @date October 2020
  11:../../libDaisy//src/daisy_versio.h ****     @ingroup boards
  12:../../libDaisy//src/daisy_versio.h **** */
  13:../../libDaisy//src/daisy_versio.h **** class DaisyVersio
  14:../../libDaisy//src/daisy_versio.h **** {
  15:../../libDaisy//src/daisy_versio.h ****   public:
  16:../../libDaisy//src/daisy_versio.h ****     // ENUMS to help index 4 LEDs, 7 knobs/CV inputs, 2 3-position switches
  17:../../libDaisy//src/daisy_versio.h ****     enum AV_LEDS
  18:../../libDaisy//src/daisy_versio.h ****     {
  19:../../libDaisy//src/daisy_versio.h ****         LED_0,
  20:../../libDaisy//src/daisy_versio.h ****         LED_1,
  21:../../libDaisy//src/daisy_versio.h ****         LED_2,
  22:../../libDaisy//src/daisy_versio.h ****         LED_3,
  23:../../libDaisy//src/daisy_versio.h ****         LED_LAST
  24:../../libDaisy//src/daisy_versio.h ****     };
  25:../../libDaisy//src/daisy_versio.h **** 
  26:../../libDaisy//src/daisy_versio.h ****     enum AV_KNOBS
  27:../../libDaisy//src/daisy_versio.h ****     {
  28:../../libDaisy//src/daisy_versio.h ****         KNOB_0,
  29:../../libDaisy//src/daisy_versio.h ****         KNOB_1,
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 2


  30:../../libDaisy//src/daisy_versio.h ****         KNOB_2,
  31:../../libDaisy//src/daisy_versio.h ****         KNOB_3,
  32:../../libDaisy//src/daisy_versio.h ****         KNOB_4,
  33:../../libDaisy//src/daisy_versio.h ****         KNOB_5,
  34:../../libDaisy//src/daisy_versio.h ****         KNOB_6,
  35:../../libDaisy//src/daisy_versio.h ****         KNOB_LAST
  36:../../libDaisy//src/daisy_versio.h ****     };
  37:../../libDaisy//src/daisy_versio.h **** 
  38:../../libDaisy//src/daisy_versio.h ****     enum AV_TOGGLE3
  39:../../libDaisy//src/daisy_versio.h ****     {
  40:../../libDaisy//src/daisy_versio.h ****         SW_0,
  41:../../libDaisy//src/daisy_versio.h ****         SW_1,
  42:../../libDaisy//src/daisy_versio.h ****         SW_LAST
  43:../../libDaisy//src/daisy_versio.h ****     };
  44:../../libDaisy//src/daisy_versio.h **** 
  45:../../libDaisy//src/daisy_versio.h ****     DaisyVersio() {}
  46:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
  30              		.loc 1 46 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB229:
  36              	.LBI229:
  37              		.file 2 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn Constructor */
  18:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  19:../../libDaisy//src/hid/gatein.h **** 
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn Destructor */
  21:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
  38              		.loc 2 21 5 view .LVU1
  39              		.loc 2 21 5 is_stmt 0 view .LVU2
  40              	.LBE229:
  41              	.LBB230:
  42              	.LBI230:
  43              		.file 3 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 3


   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE230:
  47              	.LBB231:
  48              	.LBI231:
  49              		.file 4 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 4


  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  50              		.loc 4 22 5 is_stmt 1 view .LVU5
  51              	.LBB232:
  52              	.LBI232:
  53              		.file 5 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 5


  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  54              		.loc 5 97 5 view .LVU6
  55              		.loc 5 97 5 is_stmt 0 view .LVU7
  56              	.LBE232:
  57              	.LBB233:
  58              	.LBI233:
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 6


  59              		.file 6 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  60              		.loc 6 42 5 is_stmt 1 view .LVU8
  61              		.loc 6 42 5 is_stmt 0 view .LVU9
  62              	.LBE233:
  63              	.LBB234:
  64              	.LBI234:
  65              		.file 7 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 7


   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 8


  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  66              		.loc 7 110 5 is_stmt 1 view .LVU10
  67              		.loc 7 110 5 is_stmt 0 view .LVU11
  68              	.LBE234:
  69              	.LBB235:
  70              	.LBI235:
  71              		.file 8 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 9


   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 10


  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  72              		.loc 8 96 5 is_stmt 1 view .LVU12
  73              		.loc 8 96 5 is_stmt 0 view .LVU13
  74              	.LBE235:
  75              	.LBE231:
  76              		.loc 1 46 21 view .LVU14
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE3519:
  81              		.weak	_ZN5daisy11DaisyVersioD1Ev
  82              		.thumb_set _ZN5daisy11DaisyVersioD1Ev,_ZN5daisy11DaisyVersioD2Ev
  83 0002 00BF     		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	_Z13AudioCallbackPKfPfj
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv5-d16
  92              	_Z13AudioCallbackPKfPfj:
  93              	.LVL1:
  94              	.LFB4772:
  95              		.file 9 "PlateauTest.cpp"
   1:PlateauTest.cpp **** #define DSJ_PLATEAU_HPP
   2:PlateauTest.cpp **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 11


   3:PlateauTest.cpp **** #include "Dattorro.hpp"
   4:PlateauTest.cpp **** #include <vector>
   5:PlateauTest.cpp **** 
   6:PlateauTest.cpp **** using namespace daisy;
   7:PlateauTest.cpp **** using namespace daisysp;
   8:PlateauTest.cpp **** 
   9:PlateauTest.cpp **** DaisyVersio hw;
  10:PlateauTest.cpp **** 
  11:PlateauTest.cpp **** const float sizeMin = 0.0025f;
  12:PlateauTest.cpp **** const float sizeMax = 4.0f;
  13:PlateauTest.cpp **** 
  14:PlateauTest.cpp **** const float diffMin = 0.f;
  15:PlateauTest.cpp **** const float diffMax = 1.f;
  16:PlateauTest.cpp **** 
  17:PlateauTest.cpp **** const float decayMin = 0.1f;
  18:PlateauTest.cpp **** const float decayMax = 0.9999f;
  19:PlateauTest.cpp **** 
  20:PlateauTest.cpp **** const float reverbDampMin = 0.f;
  21:PlateauTest.cpp **** const float reverbDampMax = 10.f;
  22:PlateauTest.cpp **** 
  23:PlateauTest.cpp **** const float modSpeedMin = 0.f;
  24:PlateauTest.cpp **** const float modSpeedMax = 20.f;
  25:PlateauTest.cpp **** 
  26:PlateauTest.cpp **** const float modDepthMin = 0.f;
  27:PlateauTest.cpp **** const float modDepthMax = 16.f;
  28:PlateauTest.cpp **** 
  29:PlateauTest.cpp **** constexpr float minus20dBGain = 0.1f;
  30:PlateauTest.cpp **** constexpr float zerodBGain = 1.f;
  31:PlateauTest.cpp **** 
  32:PlateauTest.cpp **** float wet = 0.5f;
  33:PlateauTest.cpp **** float dry = 0.5f;
  34:PlateauTest.cpp **** float wetValue = 0.f;
  35:PlateauTest.cpp **** float previousWetValue = wetValue;
  36:PlateauTest.cpp **** 
  37:PlateauTest.cpp **** float preDelay = 0.f;
  38:PlateauTest.cpp **** float previousPreDelay = 0.f;
  39:PlateauTest.cpp **** 
  40:PlateauTest.cpp **** float inputDampLow = 0.f;
  41:PlateauTest.cpp **** float inputDampHigh = 10.f;
  42:PlateauTest.cpp **** 
  43:PlateauTest.cpp **** float reverbDampLow = 0.f;
  44:PlateauTest.cpp **** float reverbDampHigh = 10.f;
  45:PlateauTest.cpp **** 
  46:PlateauTest.cpp **** float previousInputDampLow = 0.f;
  47:PlateauTest.cpp **** float previousInputDampHigh = 10.f;
  48:PlateauTest.cpp **** 
  49:PlateauTest.cpp **** float previousReverbDampLow = 0.f;
  50:PlateauTest.cpp **** float previousReverbDampHigh = 10.f;
  51:PlateauTest.cpp **** 
  52:PlateauTest.cpp **** bool freezeButtonState = false;
  53:PlateauTest.cpp **** bool freezeToggle = false;
  54:PlateauTest.cpp **** bool freezeToggleButtonState = false;
  55:PlateauTest.cpp **** bool freeze = false;
  56:PlateauTest.cpp **** bool frozen = false;
  57:PlateauTest.cpp **** bool tunedButtonState = false;
  58:PlateauTest.cpp **** 
  59:PlateauTest.cpp **** int inputSensitivityState = 0;
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 12


  60:PlateauTest.cpp **** 
  61:PlateauTest.cpp **** bool clear = false;
  62:PlateauTest.cpp **** bool cleared = true;
  63:PlateauTest.cpp **** bool fadeOut = false;
  64:PlateauTest.cpp **** bool fadeIn = false;
  65:PlateauTest.cpp **** 
  66:PlateauTest.cpp **** float leftInput = 0.f;
  67:PlateauTest.cpp **** float rightInput = 0.f;
  68:PlateauTest.cpp **** float leftOutput = 0.f;
  69:PlateauTest.cpp **** float rightOutput = 0.f;
  70:PlateauTest.cpp **** 
  71:PlateauTest.cpp **** float decay = 0.5f;
  72:PlateauTest.cpp **** float previousDecay = decay;
  73:PlateauTest.cpp **** 
  74:PlateauTest.cpp **** float modSpeed = 0.f;
  75:PlateauTest.cpp **** float previousModSpeed = modSpeed;
  76:PlateauTest.cpp **** 
  77:PlateauTest.cpp **** float modDepth = 0.f;
  78:PlateauTest.cpp **** float previousModDepth = modDepth;
  79:PlateauTest.cpp **** 
  80:PlateauTest.cpp **** float timeScale = 2.f;
  81:PlateauTest.cpp **** float previousTimeScale = timeScale;
  82:PlateauTest.cpp **** 
  83:PlateauTest.cpp **** float tempCutoff = 0.f;
  84:PlateauTest.cpp **** 
  85:PlateauTest.cpp **** int holdCount = 0;
  86:PlateauTest.cpp **** int paramCount = 0;
  87:PlateauTest.cpp **** 
  88:PlateauTest.cpp **** Dattorro reverb;
  89:PlateauTest.cpp **** 
  90:PlateauTest.cpp **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  91:PlateauTest.cpp ****               AudioHandle::InterleavingOutputBuffer out,
  92:PlateauTest.cpp ****               size_t                                size)
  93:PlateauTest.cpp **** {
  96              		.loc 9 93 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 0, uses_anonymous_args = 0
  94:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 100              		.loc 9 94 5 view .LVU16
 101              	.LBB236:
 102              		.loc 9 94 25 view .LVU17
 103 0000 002A     		cmp	r2, #0
 104 0002 00F04B81 		beq	.L47
 105 0006 013A     		subs	r2, r2, #1
 106              	.LVL2:
 107              		.loc 9 94 25 is_stmt 0 view .LVU18
 108              	.LBE236:
  93:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 109              		.loc 9 93 1 view .LVU19
 110 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 111              		.cfi_def_cfa_offset 36
 112              		.cfi_offset 4, -36
 113              		.cfi_offset 5, -32
 114              		.cfi_offset 6, -28
 115              		.cfi_offset 7, -24
 116              		.cfi_offset 8, -20
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 13


 117              		.cfi_offset 9, -16
 118              		.cfi_offset 10, -12
 119              		.cfi_offset 11, -8
 120              		.cfi_offset 14, -4
 121 000c 5308     		lsrs	r3, r2, #1
 122 000e 0446     		mov	r4, r0
 123 0010 0D46     		mov	r5, r1
 124              	.LBB247:
 125              		.loc 9 94 25 view .LVU20
 126 0012 4FF00008 		mov	r8, #0
 127 0016 DFF8D8B2 		ldr	fp, .L53+80
 128 001a DFF8D8A2 		ldr	r10, .L53+84
 129 001e A04F     		ldr	r7, .L53
 130 0020 A04E     		ldr	r6, .L53+4
 131 0022 DFF8D492 		ldr	r9, .L53+88
 132              	.LBE247:
  93:PlateauTest.cpp ****     for(size_t i = 0; i < size; i += 2)
 133              		.loc 9 93 1 view .LVU21
 134 0026 2DED048B 		vpush.64	{d8, d9}
 135              		.cfi_def_cfa_offset 52
 136              		.cfi_offset 80, -52
 137              		.cfi_offset 81, -48
 138              		.cfi_offset 82, -44
 139              		.cfi_offset 83, -40
 140 002a 83B0     		sub	sp, sp, #12
 141              		.cfi_def_cfa_offset 64
 142 002c 0193     		str	r3, [sp, #4]
 143              	.LVL3:
 144              	.L34:
 145              	.LBB248:
  95:PlateauTest.cpp ****     {
  96:PlateauTest.cpp ****         reverb.process(in[i] * minus20dBGain,
 146              		.loc 9 96 9 is_stmt 1 view .LVU22
 147              		.loc 9 96 23 is_stmt 0 view .LVU23
 148 002e DFED9E7A 		vldr.32	s15, .L53+8
 149 0032 D4ED010A 		vldr.32	s1, [r4, #4]
 150 0036 94ED000A 		vldr.32	s0, [r4]
 151 003a 60EEA70A 		vmul.f32	s1, s1, s15
 152 003e 9B48     		ldr	r0, .L53+12
 153 0040 20EE270A 		vmul.f32	s0, s0, s15
 154 0044 FFF7FEFF 		bl	_ZN8Dattorro7processEff
 155              	.LVL4:
  97:PlateauTest.cpp ****                 in[i + 1] * minus20dBGain);
  98:PlateauTest.cpp **** 
  99:PlateauTest.cpp ****         leftOutput = (in[i] * dry) + 
 156              		.loc 9 99 9 is_stmt 1 view .LVU24
 100:PlateauTest.cpp ****                 (reverb.getLeftOutput() * 2 * wet);
 157              		.loc 9 100 38 is_stmt 0 view .LVU25
 158 0048 9848     		ldr	r0, .L53+12
  99:PlateauTest.cpp ****                 (reverb.getLeftOutput() * 2 * wet);
 159              		.loc 9 99 29 view .LVU26
 160 004a DBED008A 		vldr.32	s17, [fp]
  99:PlateauTest.cpp ****                 (reverb.getLeftOutput() * 2 * wet);
 161              		.loc 9 99 27 view .LVU27
 162 004e 94ED009A 		vldr.32	s18, [r4]
 163              		.loc 9 100 38 view .LVU28
 164 0052 FFF7FEFF 		bl	_ZNK8Dattorro13getLeftOutputEv
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 14


 165              	.LVL5:
 166              		.loc 9 100 41 view .LVU29
 167 0056 30EE000A 		vadd.f32	s0, s0, s0
 168              		.loc 9 100 45 view .LVU30
 169 005a DAED007A 		vldr.32	s15, [r10]
 101:PlateauTest.cpp ****         rightOutput = (in[i + 1] * dry) + 
 102:PlateauTest.cpp ****                 (reverb.getRightOutput() * 2 * wet);
 170              		.loc 9 102 39 view .LVU31
 171 005e 9348     		ldr	r0, .L53+12
 101:PlateauTest.cpp ****         rightOutput = (in[i + 1] * dry) + 
 172              		.loc 9 101 34 view .LVU32
 173 0060 9BED008A 		vldr.32	s16, [fp]
 100:PlateauTest.cpp ****         rightOutput = (in[i + 1] * dry) + 
 174              		.loc 9 100 45 view .LVU33
 175 0064 20EE270A 		vmul.f32	s0, s0, s15
  99:PlateauTest.cpp ****                 (reverb.getLeftOutput() * 2 * wet);
 176              		.loc 9 99 36 view .LVU34
 177 0068 A9EE280A 		vfma.f32	s0, s18, s17
  99:PlateauTest.cpp ****                 (reverb.getLeftOutput() * 2 * wet);
 178              		.loc 9 99 20 view .LVU35
 179 006c 87ED000A 		vstr.32	s0, [r7]
 101:PlateauTest.cpp ****         rightOutput = (in[i + 1] * dry) + 
 180              		.loc 9 101 9 is_stmt 1 view .LVU36
 101:PlateauTest.cpp ****         rightOutput = (in[i + 1] * dry) + 
 181              		.loc 9 101 32 is_stmt 0 view .LVU37
 182 0070 D4ED018A 		vldr.32	s17, [r4, #4]
 183              		.loc 9 102 39 view .LVU38
 184 0074 FFF7FEFF 		bl	_ZNK8Dattorro14getRightOutputEv
 185              	.LVL6:
 186              		.loc 9 102 42 view .LVU39
 187 0078 30EE000A 		vadd.f32	s0, s0, s0
 188              		.loc 9 102 46 view .LVU40
 189 007c DAED006A 		vldr.32	s13, [r10]
 103:PlateauTest.cpp **** 
 104:PlateauTest.cpp ****         if(leftOutput > 10)
 190              		.loc 9 104 9 view .LVU41
 191 0080 B2EE047A 		vmov.f32	s14, #1.0e+1
 192              		.loc 9 104 23 view .LVU42
 193 0084 D7ED007A 		vldr.32	s15, [r7]
 102:PlateauTest.cpp **** 
 194              		.loc 9 102 46 view .LVU43
 195 0088 20EE260A 		vmul.f32	s0, s0, s13
 196              		.loc 9 104 9 view .LVU44
 197 008c F4EEC77A 		vcmpe.f32	s15, s14
 101:PlateauTest.cpp ****                 (reverb.getRightOutput() * 2 * wet);
 198              		.loc 9 101 41 view .LVU45
 199 0090 A8EE880A 		vfma.f32	s0, s17, s16
 200              		.loc 9 104 9 view .LVU46
 201 0094 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 101:PlateauTest.cpp ****                 (reverb.getRightOutput() * 2 * wet);
 202              		.loc 9 101 21 view .LVU47
 203 0098 86ED000A 		vstr.32	s0, [r6]
 204              		.loc 9 104 9 is_stmt 1 view .LVU48
 205 009c 06DC     		bgt	.L50
 105:PlateauTest.cpp ****             leftOutput = 10;
 106:PlateauTest.cpp **** 
 107:PlateauTest.cpp ****         if(leftOutput < -10)
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 15


 206              		.loc 9 107 9 view .LVU49
 207 009e BAEE047A 		vmov.f32	s14, #-1.0e+1
 208 00a2 F4EEC77A 		vcmpe.f32	s15, s14
 209 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 210 00aa 03D5     		bpl	.L7
 211              	.L50:
 108:PlateauTest.cpp ****             leftOutput = -10;
 212              		.loc 9 108 13 view .LVU50
 213 00ac F0EE477A 		vmov.f32	s15, s14
 214              		.loc 9 108 24 is_stmt 0 view .LVU51
 215 00b0 87ED007A 		vstr.32	s14, [r7]
 216              	.L7:
 109:PlateauTest.cpp **** 
 110:PlateauTest.cpp ****         if(rightOutput > 10)
 217              		.loc 9 110 9 is_stmt 1 view .LVU52
 218 00b4 B2EE047A 		vmov.f32	s14, #1.0e+1
 219 00b8 B4EEC70A 		vcmpe.f32	s0, s14
 220 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 221 00c0 06DC     		bgt	.L51
 111:PlateauTest.cpp ****             rightOutput = 10;
 112:PlateauTest.cpp ****         
 113:PlateauTest.cpp ****         if(rightOutput < -10)
 222              		.loc 9 113 9 view .LVU53
 223 00c2 BAEE047A 		vmov.f32	s14, #-1.0e+1
 224 00c6 B4EEC70A 		vcmpe.f32	s0, s14
 225 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 226 00ce 01D5     		bpl	.L11
 227              	.L51:
 114:PlateauTest.cpp ****             rightOutput = -10;
 228              		.loc 9 114 13 view .LVU54
 229              		.loc 9 114 25 is_stmt 0 view .LVU55
 230 00d0 86ED007A 		vstr.32	s14, [r6]
 231              	.L11:
 115:PlateauTest.cpp **** 
 116:PlateauTest.cpp ****         out[i] = leftOutput;
 232              		.loc 9 116 9 is_stmt 1 view .LVU56
 233              		.loc 9 116 16 is_stmt 0 view .LVU57
 234 00d4 C5ED007A 		vstr.32	s15, [r5]
 117:PlateauTest.cpp ****         out[i + 1] = rightOutput;
 235              		.loc 9 117 9 is_stmt 1 view .LVU58
 236              		.loc 9 117 20 is_stmt 0 view .LVU59
 237 00d8 3368     		ldr	r3, [r6]	@ float
 118:PlateauTest.cpp **** 
 119:PlateauTest.cpp ****         hw.ProcessAnalogControls();
 238              		.loc 9 119 33 view .LVU60
 239 00da 7548     		ldr	r0, .L53+16
 117:PlateauTest.cpp ****         out[i + 1] = rightOutput;
 240              		.loc 9 117 20 view .LVU61
 241 00dc 6B60     		str	r3, [r5, #4]	@ float
 242              		.loc 9 119 9 is_stmt 1 view .LVU62
 243              		.loc 9 119 33 is_stmt 0 view .LVU63
 244 00de FFF7FEFF 		bl	_ZN5daisy11DaisyVersio21ProcessAnalogControlsEv
 245              	.LVL7:
 120:PlateauTest.cpp ****         // hw.UpdateLeds();
 121:PlateauTest.cpp **** 
 122:PlateauTest.cpp ****         if(holdCount < 192000)
 246              		.loc 9 122 9 is_stmt 1 view .LVU64
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 16


 247              		.loc 9 122 22 is_stmt 0 view .LVU65
 248 00e2 7449     		ldr	r1, .L53+20
 249              		.loc 9 122 9 view .LVU66
 250 00e4 744A     		ldr	r2, .L53+24
 251              		.loc 9 122 22 view .LVU67
 252 00e6 0B68     		ldr	r3, [r1]
 253              		.loc 9 122 9 view .LVU68
 254 00e8 9342     		cmp	r3, r2
 255 00ea 00F3C680 		bgt	.L13
 123:PlateauTest.cpp ****             ++holdCount;
 256              		.loc 9 123 13 is_stmt 1 view .LVU69
 257 00ee 0133     		adds	r3, r3, #1
 258 00f0 0B60     		str	r3, [r1]
 259              	.L14:
 124:PlateauTest.cpp ****         else
 125:PlateauTest.cpp ****             hold = true;
 126:PlateauTest.cpp **** 
 127:PlateauTest.cpp ****         //If reverb is too grungy, add this section into the switch statement below.
 128:PlateauTest.cpp ****         //It was necessary for the time scale, size, to respond smoothly to modulation,
 129:PlateauTest.cpp ****         //hence its placement outside the following switch statement.
 130:PlateauTest.cpp ****         timeScale = hw.GetKnobValue(DaisyVersio::KNOB_5) * 4.f;
 260              		.loc 9 130 9 view .LVU70
 261              		.loc 9 130 36 is_stmt 0 view .LVU71
 262 00f2 0521     		movs	r1, #5
 263 00f4 6E48     		ldr	r0, .L53+16
 264 00f6 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 265              	.LVL8:
 266              		.loc 9 130 58 view .LVU72
 267 00fa F1EE007A 		vmov.f32	s15, #4.0e+0
 268              		.loc 9 130 19 view .LVU73
 269 00fe 6F4B     		ldr	r3, .L53+28
 131:PlateauTest.cpp ****             reverb.setTimeScale(timeScale); 
 270              		.loc 9 131 32 view .LVU74
 271 0100 6A48     		ldr	r0, .L53+12
 130:PlateauTest.cpp ****             reverb.setTimeScale(timeScale); 
 272              		.loc 9 130 58 view .LVU75
 273 0102 20EE270A 		vmul.f32	s0, s0, s15
 130:PlateauTest.cpp ****             reverb.setTimeScale(timeScale); 
 274              		.loc 9 130 19 view .LVU76
 275 0106 83ED000A 		vstr.32	s0, [r3]
 276              		.loc 9 131 13 is_stmt 1 view .LVU77
 277              		.loc 9 131 32 is_stmt 0 view .LVU78
 278 010a FFF7FEFF 		bl	_ZN8Dattorro12setTimeScaleEf
 279              	.LVL9:
 132:PlateauTest.cpp **** 
 133:PlateauTest.cpp ****         //Caused some artifacting when in the main while loop, using this method to offload some st
 134:PlateauTest.cpp ****         //Knobs are generally unstable so nose of the following will track smoothly.
 135:PlateauTest.cpp ****         //If you want things to track nicer then it is recommented to lower the 0.01f, but this may
 136:PlateauTest.cpp ****         //unwanted artifacting.
 137:PlateauTest.cpp ****         switch (paramCount) {
 280              		.loc 9 137 9 is_stmt 1 view .LVU79
 281 010e D9F80030 		ldr	r3, [r9]
 282 0112 052B     		cmp	r3, #5
 283 0114 07D8     		bhi	.L15
 284 0116 DFE803F0 		tbb	[pc, r3]
 285              	.L17:
 286 011a 2C       		.byte	(.L22-.L17)/2
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 17


 287 011b 10       		.byte	(.L21-.L17)/2
 288 011c 6D       		.byte	(.L20-.L17)/2
 289 011d 4C       		.byte	(.L19-.L17)/2
 290 011e 8E       		.byte	(.L18-.L17)/2
 291 011f 03       		.byte	(.L16-.L17)/2
 292              		.p2align 1
 293              	.L16:
 138:PlateauTest.cpp ****             case 0:
 139:PlateauTest.cpp ****                 wetValue = hw.GetKnobValue(DaisyVersio::KNOB_0);
 140:PlateauTest.cpp ****                 if(abs(wetValue - previousWetValue) > 0.1f) {
 141:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 142:PlateauTest.cpp ****                     wet = wetValue;
 143:PlateauTest.cpp ****                     previousWetValue = wetValue;
 144:PlateauTest.cpp ****                 }
 145:PlateauTest.cpp ****                 ++paramCount;
 146:PlateauTest.cpp ****                 break;
 147:PlateauTest.cpp ****             case 1:
 148:PlateauTest.cpp ****                 decay = hw.GetKnobValue(DaisyVersio::KNOB_4);
 149:PlateauTest.cpp ****                 if(abs(decay - previousDecay) > 0.01f) {
 150:PlateauTest.cpp ****                     reverb.setDecay(decay);
 151:PlateauTest.cpp ****                     previousDecay = decay;
 152:PlateauTest.cpp ****                 }
 153:PlateauTest.cpp ****                 ++paramCount;
 154:PlateauTest.cpp ****                 break;
 155:PlateauTest.cpp ****             case 2:
 156:PlateauTest.cpp ****                 modSpeed = hw.GetKnobValue(DaisyVersio::KNOB_1) * 10.f;
 157:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 158:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 159:PlateauTest.cpp ****                     previousModSpeed = modSpeed;
 160:PlateauTest.cpp ****                 }
 161:PlateauTest.cpp ****                 ++paramCount;
 162:PlateauTest.cpp ****                 break;
 163:PlateauTest.cpp ****             case 3:
 164:PlateauTest.cpp ****                 modDepth = hw.GetKnobValue(DaisyVersio::KNOB_3) * 16.f;
 165:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 166:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 167:PlateauTest.cpp ****                     previousModDepth = modDepth;
 168:PlateauTest.cpp ****                 }
 169:PlateauTest.cpp ****                 ++paramCount;
 170:PlateauTest.cpp ****                 break;
 171:PlateauTest.cpp ****             case 4:
 172:PlateauTest.cpp ****                 preDelay = hw.GetKnobValue(DaisyVersio::KNOB_6) * 4;
 173:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 174:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 175:PlateauTest.cpp ****                     previousPreDelay = preDelay;
 176:PlateauTest.cpp ****                 }
 177:PlateauTest.cpp ****                 ++paramCount;
 178:PlateauTest.cpp ****                 break;
 179:PlateauTest.cpp ****             case 5:
 294              		.loc 9 179 13 view .LVU80
 180:PlateauTest.cpp ****                 paramCount = 0;
 295              		.loc 9 180 17 view .LVU81
 296              		.loc 9 180 28 is_stmt 0 view .LVU82
 297 0120 0023     		movs	r3, #0
 298 0122 C9F80030 		str	r3, [r9]
 181:PlateauTest.cpp ****                 break;
 299              		.loc 9 181 17 is_stmt 1 view .LVU83
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 18


 300              	.L15:
  94:PlateauTest.cpp ****     {
 301              		.loc 9 94 5 discriminator 2 view .LVU84
 302              	.LVL10:
  94:PlateauTest.cpp ****     {
 303              		.loc 9 94 25 discriminator 2 view .LVU85
 304 0126 019A     		ldr	r2, [sp, #4]
 305 0128 08F10103 		add	r3, r8, #1
 306 012c 0834     		adds	r4, r4, #8
 307 012e 0835     		adds	r5, r5, #8
 308 0130 9045     		cmp	r8, r2
 309 0132 00F0A680 		beq	.L3
 310 0136 9846     		mov	r8, r3
 311              	.LVL11:
  94:PlateauTest.cpp ****     {
 312              		.loc 9 94 25 is_stmt 0 discriminator 2 view .LVU86
 313 0138 79E7     		b	.L34
 314              	.LVL12:
 315              	.L21:
 147:PlateauTest.cpp ****                 decay = hw.GetKnobValue(DaisyVersio::KNOB_4);
 316              		.loc 9 147 13 is_stmt 1 view .LVU87
 148:PlateauTest.cpp ****                 if(abs(decay - previousDecay) > 0.01f) {
 317              		.loc 9 148 17 view .LVU88
 148:PlateauTest.cpp ****                 if(abs(decay - previousDecay) > 0.01f) {
 318              		.loc 9 148 40 is_stmt 0 view .LVU89
 319 013a 0421     		movs	r1, #4
 320 013c 5C48     		ldr	r0, .L53+16
 321 013e FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 322              	.LVL13:
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 323              		.loc 9 149 23 view .LVU90
 324 0142 5F4B     		ldr	r3, .L53+32
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 325              		.loc 9 149 17 view .LVU91
 326 0144 DFED5F6A 		vldr.32	s13, .L53+36
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 327              		.loc 9 149 23 view .LVU92
 328 0148 D3ED007A 		vldr.32	s15, [r3]
 148:PlateauTest.cpp ****                 if(abs(decay - previousDecay) > 0.01f) {
 329              		.loc 9 148 23 view .LVU93
 330 014c 5E4A     		ldr	r2, .L53+40
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 331              		.loc 9 149 23 view .LVU94
 332 014e 70EE677A 		vsub.f32	s15, s0, s15
 148:PlateauTest.cpp ****                 if(abs(decay - previousDecay) > 0.01f) {
 333              		.loc 9 148 23 view .LVU95
 334 0152 82ED000A 		vstr.32	s0, [r2]
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 335              		.loc 9 149 17 is_stmt 1 view .LVU96
 336              	.LVL14:
 337              	.LBB237:
 338              	.LBI237:
 339              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 19


   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 20


  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
 340              		.loc 10 75 3 view .LVU97
 341              	.LBB238:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 342              		.loc 10 76 5 view .LVU98
 343              		.loc 10 76 31 is_stmt 0 view .LVU99
 344 0156 F0EEE77A 		vabs.f32	s15, s15
 345              	.LBE238:
 346              	.LBE237:
 149:PlateauTest.cpp ****                     reverb.setDecay(decay);
 347              		.loc 9 149 17 view .LVU100
 348 015a F4EEE67A 		vcmpe.f32	s15, s13
 349 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 350 0162 00F39380 		bgt	.L52
 351              	.L31:
 177:PlateauTest.cpp ****                 break;
 352              		.loc 9 177 17 is_stmt 1 view .LVU101
 353 0166 D9F80030 		ldr	r3, [r9]
 354 016a 0133     		adds	r3, r3, #1
 355 016c C9F80030 		str	r3, [r9]
 178:PlateauTest.cpp ****             case 5:
 356              		.loc 9 178 17 view .LVU102
 357 0170 D9E7     		b	.L15
 358              	.L22:
 138:PlateauTest.cpp ****                 wetValue = hw.GetKnobValue(DaisyVersio::KNOB_0);
 359              		.loc 9 138 13 view .LVU103
 139:PlateauTest.cpp ****                 if(abs(wetValue - previousWetValue) > 0.1f) {
 360              		.loc 9 139 17 view .LVU104
 139:PlateauTest.cpp ****                 if(abs(wetValue - previousWetValue) > 0.1f) {
 361              		.loc 9 139 43 is_stmt 0 view .LVU105
 362 0172 0021     		movs	r1, #0
 363 0174 4E48     		ldr	r0, .L53+16
 364 0176 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 365              	.LVL15:
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 366              		.loc 9 140 23 view .LVU106
 367 017a 544B     		ldr	r3, .L53+44
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 368              		.loc 9 140 17 view .LVU107
 369 017c 9FED4A7A 		vldr.32	s14, .L53+8
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 370              		.loc 9 140 23 view .LVU108
 371 0180 D3ED007A 		vldr.32	s15, [r3]
 139:PlateauTest.cpp ****                 if(abs(wetValue - previousWetValue) > 0.1f) {
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 21


 372              		.loc 9 139 26 view .LVU109
 373 0184 524A     		ldr	r2, .L53+48
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 374              		.loc 9 140 23 view .LVU110
 375 0186 70EE677A 		vsub.f32	s15, s0, s15
 139:PlateauTest.cpp ****                 if(abs(wetValue - previousWetValue) > 0.1f) {
 376              		.loc 9 139 26 view .LVU111
 377 018a 82ED000A 		vstr.32	s0, [r2]
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 378              		.loc 9 140 17 is_stmt 1 view .LVU112
 379              	.LVL16:
 380              	.LBB239:
 381              	.LBI239:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 382              		.loc 10 75 3 view .LVU113
 383              	.LBB240:
 384              		.loc 10 76 5 view .LVU114
 385              		.loc 10 76 31 is_stmt 0 view .LVU115
 386 018e F0EEE77A 		vabs.f32	s15, s15
 387              	.LBE240:
 388              	.LBE239:
 140:PlateauTest.cpp ****                     dry = 1.f - wetValue;
 389              		.loc 9 140 17 view .LVU116
 390 0192 F4EEC77A 		vcmpe.f32	s15, s14
 391 0196 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 392 019a E4DD     		ble	.L31
 141:PlateauTest.cpp ****                     wet = wetValue;
 393              		.loc 9 141 21 is_stmt 1 view .LVU117
 141:PlateauTest.cpp ****                     wet = wetValue;
 394              		.loc 9 141 31 is_stmt 0 view .LVU118
 395 019c F7EE007A 		vmov.f32	s15, #1.0e+0
 143:PlateauTest.cpp ****                 }
 396              		.loc 9 143 38 view .LVU119
 397 01a0 83ED000A 		vstr.32	s0, [r3]
 142:PlateauTest.cpp ****                     previousWetValue = wetValue;
 398              		.loc 9 142 25 view .LVU120
 399 01a4 8AED000A 		vstr.32	s0, [r10]
 141:PlateauTest.cpp ****                     wet = wetValue;
 400              		.loc 9 141 31 view .LVU121
 401 01a8 37EEC00A 		vsub.f32	s0, s15, s0
 141:PlateauTest.cpp ****                     wet = wetValue;
 402              		.loc 9 141 25 view .LVU122
 403 01ac 8BED000A 		vstr.32	s0, [fp]
 142:PlateauTest.cpp ****                     previousWetValue = wetValue;
 404              		.loc 9 142 21 is_stmt 1 view .LVU123
 143:PlateauTest.cpp ****                 }
 405              		.loc 9 143 21 view .LVU124
 145:PlateauTest.cpp ****                 break;
 406              		.loc 9 145 17 view .LVU125
 407 01b0 D9E7     		b	.L31
 408              	.L19:
 163:PlateauTest.cpp ****                 modDepth = hw.GetKnobValue(DaisyVersio::KNOB_3) * 16.f;
 409              		.loc 9 163 13 view .LVU126
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 410              		.loc 9 164 17 view .LVU127
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 411              		.loc 9 164 43 is_stmt 0 view .LVU128
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 22


 412 01b2 0321     		movs	r1, #3
 413 01b4 3E48     		ldr	r0, .L53+16
 414 01b6 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 415              	.LVL17:
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 416              		.loc 9 164 65 view .LVU129
 417 01ba F3EE007A 		vmov.f32	s15, #1.6e+1
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 418              		.loc 9 165 23 view .LVU130
 419 01be 454B     		ldr	r3, .L53+52
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 420              		.loc 9 165 17 view .LVU131
 421 01c0 9FED397A 		vldr.32	s14, .L53+8
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 422              		.loc 9 164 65 view .LVU132
 423 01c4 20EE270A 		vmul.f32	s0, s0, s15
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 424              		.loc 9 165 23 view .LVU133
 425 01c8 D3ED007A 		vldr.32	s15, [r3]
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 426              		.loc 9 164 26 view .LVU134
 427 01cc 424A     		ldr	r2, .L53+56
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 428              		.loc 9 165 23 view .LVU135
 429 01ce 70EE677A 		vsub.f32	s15, s0, s15
 164:PlateauTest.cpp ****                 if(abs(modDepth - previousModDepth) > 0.1f) {
 430              		.loc 9 164 26 view .LVU136
 431 01d2 82ED000A 		vstr.32	s0, [r2]
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 432              		.loc 9 165 17 is_stmt 1 view .LVU137
 433              	.LVL18:
 434              	.LBB241:
 435              	.LBI241:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 436              		.loc 10 75 3 view .LVU138
 437              	.LBB242:
 438              		.loc 10 76 5 view .LVU139
 439              		.loc 10 76 31 is_stmt 0 view .LVU140
 440 01d6 F0EEE77A 		vabs.f32	s15, s15
 441              	.LBE242:
 442              	.LBE241:
 165:PlateauTest.cpp ****                     reverb.setTankModDepth(modDepth);
 443              		.loc 9 165 17 view .LVU141
 444 01da F4EEC77A 		vcmpe.f32	s15, s14
 445 01de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 446 01e2 C0DD     		ble	.L31
 166:PlateauTest.cpp ****                     previousModDepth = modDepth;
 447              		.loc 9 166 21 is_stmt 1 view .LVU142
 166:PlateauTest.cpp ****                     previousModDepth = modDepth;
 448              		.loc 9 166 43 is_stmt 0 view .LVU143
 449 01e4 3148     		ldr	r0, .L53+12
 450 01e6 FFF7FEFF 		bl	_ZN8Dattorro15setTankModDepthEf
 451              	.LVL19:
 167:PlateauTest.cpp ****                 }
 452              		.loc 9 167 21 is_stmt 1 view .LVU144
 167:PlateauTest.cpp ****                 }
 453              		.loc 9 167 38 is_stmt 0 view .LVU145
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 23


 454 01ea 3B4A     		ldr	r2, .L53+56
 455 01ec 394B     		ldr	r3, .L53+52
 456 01ee 1268     		ldr	r2, [r2]	@ float
 457 01f0 1A60     		str	r2, [r3]	@ float
 169:PlateauTest.cpp ****                 break;
 458              		.loc 9 169 17 is_stmt 1 view .LVU146
 459 01f2 B8E7     		b	.L31
 460              	.L20:
 155:PlateauTest.cpp ****                 modSpeed = hw.GetKnobValue(DaisyVersio::KNOB_1) * 10.f;
 461              		.loc 9 155 13 view .LVU147
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 462              		.loc 9 156 17 view .LVU148
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 463              		.loc 9 156 43 is_stmt 0 view .LVU149
 464 01f4 0121     		movs	r1, #1
 465 01f6 2E48     		ldr	r0, .L53+16
 466 01f8 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 467              	.LVL20:
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 468              		.loc 9 156 65 view .LVU150
 469 01fc F2EE047A 		vmov.f32	s15, #1.0e+1
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 470              		.loc 9 157 23 view .LVU151
 471 0200 364B     		ldr	r3, .L53+60
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 472              		.loc 9 157 17 view .LVU152
 473 0202 9FED297A 		vldr.32	s14, .L53+8
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 474              		.loc 9 156 65 view .LVU153
 475 0206 20EE270A 		vmul.f32	s0, s0, s15
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 476              		.loc 9 157 23 view .LVU154
 477 020a D3ED007A 		vldr.32	s15, [r3]
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 478              		.loc 9 156 26 view .LVU155
 479 020e 344A     		ldr	r2, .L53+64
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 480              		.loc 9 157 23 view .LVU156
 481 0210 70EE677A 		vsub.f32	s15, s0, s15
 156:PlateauTest.cpp ****                 if(abs(modSpeed - previousModSpeed) > 0.1f) {
 482              		.loc 9 156 26 view .LVU157
 483 0214 82ED000A 		vstr.32	s0, [r2]
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 484              		.loc 9 157 17 is_stmt 1 view .LVU158
 485              	.LVL21:
 486              	.LBB243:
 487              	.LBI243:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 488              		.loc 10 75 3 view .LVU159
 489              	.LBB244:
 490              		.loc 10 76 5 view .LVU160
 491              		.loc 10 76 31 is_stmt 0 view .LVU161
 492 0218 F0EEE77A 		vabs.f32	s15, s15
 493              	.LBE244:
 494              	.LBE243:
 157:PlateauTest.cpp ****                     reverb.setTankModSpeed(modSpeed);
 495              		.loc 9 157 17 view .LVU162
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 24


 496 021c F4EEC77A 		vcmpe.f32	s15, s14
 497 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 498 0224 9FDD     		ble	.L31
 158:PlateauTest.cpp ****                     previousModSpeed = modSpeed;
 499              		.loc 9 158 21 is_stmt 1 view .LVU163
 158:PlateauTest.cpp ****                     previousModSpeed = modSpeed;
 500              		.loc 9 158 43 is_stmt 0 view .LVU164
 501 0226 2148     		ldr	r0, .L53+12
 502 0228 FFF7FEFF 		bl	_ZN8Dattorro15setTankModSpeedEf
 503              	.LVL22:
 159:PlateauTest.cpp ****                 }
 504              		.loc 9 159 21 is_stmt 1 view .LVU165
 159:PlateauTest.cpp ****                 }
 505              		.loc 9 159 38 is_stmt 0 view .LVU166
 506 022c 2C4A     		ldr	r2, .L53+64
 507 022e 2B4B     		ldr	r3, .L53+60
 508 0230 1268     		ldr	r2, [r2]	@ float
 509 0232 1A60     		str	r2, [r3]	@ float
 161:PlateauTest.cpp ****                 break;
 510              		.loc 9 161 17 is_stmt 1 view .LVU167
 511 0234 97E7     		b	.L31
 512              	.L18:
 171:PlateauTest.cpp ****                 preDelay = hw.GetKnobValue(DaisyVersio::KNOB_6) * 4;
 513              		.loc 9 171 13 view .LVU168
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 514              		.loc 9 172 17 view .LVU169
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 515              		.loc 9 172 43 is_stmt 0 view .LVU170
 516 0236 0621     		movs	r1, #6
 517 0238 1D48     		ldr	r0, .L53+16
 518 023a FFF7FEFF 		bl	_ZN5daisy11DaisyVersio12GetKnobValueEi
 519              	.LVL23:
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 520              		.loc 9 172 65 view .LVU171
 521 023e F1EE007A 		vmov.f32	s15, #4.0e+0
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 522              		.loc 9 173 23 view .LVU172
 523 0242 284B     		ldr	r3, .L53+68
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 524              		.loc 9 173 17 view .LVU173
 525 0244 9FED1F7A 		vldr.32	s14, .L53+36
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 526              		.loc 9 172 65 view .LVU174
 527 0248 20EE270A 		vmul.f32	s0, s0, s15
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 528              		.loc 9 173 23 view .LVU175
 529 024c D3ED007A 		vldr.32	s15, [r3]
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 530              		.loc 9 172 26 view .LVU176
 531 0250 254A     		ldr	r2, .L53+72
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 532              		.loc 9 173 23 view .LVU177
 533 0252 70EE677A 		vsub.f32	s15, s0, s15
 172:PlateauTest.cpp ****                 if(abs(preDelay - previousPreDelay) > 0.01f) {
 534              		.loc 9 172 26 view .LVU178
 535 0256 82ED000A 		vstr.32	s0, [r2]
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 25


 536              		.loc 9 173 17 is_stmt 1 view .LVU179
 537              	.LVL24:
 538              	.LBB245:
 539              	.LBI245:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 540              		.loc 10 75 3 view .LVU180
 541              	.LBB246:
 542              		.loc 10 76 5 view .LVU181
 543              		.loc 10 76 31 is_stmt 0 view .LVU182
 544 025a F0EEE77A 		vabs.f32	s15, s15
 545              	.LBE246:
 546              	.LBE245:
 173:PlateauTest.cpp ****                     reverb.setPreDelay(preDelay);
 547              		.loc 9 173 17 view .LVU183
 548 025e F4EEC77A 		vcmpe.f32	s15, s14
 549 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 550 0266 7FF77EAF 		ble	.L31
 174:PlateauTest.cpp ****                     previousPreDelay = preDelay;
 551              		.loc 9 174 21 is_stmt 1 view .LVU184
 174:PlateauTest.cpp ****                     previousPreDelay = preDelay;
 552              		.loc 9 174 39 is_stmt 0 view .LVU185
 553 026a 1048     		ldr	r0, .L53+12
 554 026c FFF7FEFF 		bl	_ZN8Dattorro11setPreDelayEf
 555              	.LVL25:
 175:PlateauTest.cpp ****                 }
 556              		.loc 9 175 21 is_stmt 1 view .LVU186
 175:PlateauTest.cpp ****                 }
 557              		.loc 9 175 38 is_stmt 0 view .LVU187
 558 0270 1D4A     		ldr	r2, .L53+72
 559 0272 1C4B     		ldr	r3, .L53+68
 560 0274 1268     		ldr	r2, [r2]	@ float
 561 0276 1A60     		str	r2, [r3]	@ float
 562 0278 75E7     		b	.L31
 563              	.L13:
 125:PlateauTest.cpp **** 
 564              		.loc 9 125 13 is_stmt 1 view .LVU188
 125:PlateauTest.cpp **** 
 565              		.loc 9 125 18 is_stmt 0 view .LVU189
 566 027a 1C4B     		ldr	r3, .L53+76
 567 027c 0122     		movs	r2, #1
 568 027e 1A70     		strb	r2, [r3]
 569 0280 37E7     		b	.L14
 570              	.LVL26:
 571              	.L3:
 125:PlateauTest.cpp **** 
 572              		.loc 9 125 18 view .LVU190
 573              	.LBE248:
 182:PlateauTest.cpp ****         }
 183:PlateauTest.cpp ****     }
 184:PlateauTest.cpp **** }
 574              		.loc 9 184 1 view .LVU191
 575 0282 03B0     		add	sp, sp, #12
 576              		.cfi_remember_state
 577              		.cfi_def_cfa_offset 52
 578              		@ sp needed
 579 0284 BDEC048B 		vldm	sp!, {d8-d9}
 580              		.cfi_restore 82
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 26


 581              		.cfi_restore 83
 582              		.cfi_restore 80
 583              		.cfi_restore 81
 584              		.cfi_def_cfa_offset 36
 585 0288 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 586              	.LVL27:
 587              	.L52:
 588              		.cfi_restore_state
 589              	.LBB249:
 150:PlateauTest.cpp ****                     previousDecay = decay;
 590              		.loc 9 150 21 is_stmt 1 view .LVU192
 150:PlateauTest.cpp ****                     previousDecay = decay;
 591              		.loc 9 150 36 is_stmt 0 view .LVU193
 592 028c 0748     		ldr	r0, .L53+12
 593 028e FFF7FEFF 		bl	_ZN8Dattorro8setDecayEf
 594              	.LVL28:
 151:PlateauTest.cpp ****                 }
 595              		.loc 9 151 21 is_stmt 1 view .LVU194
 151:PlateauTest.cpp ****                 }
 596              		.loc 9 151 35 is_stmt 0 view .LVU195
 597 0292 0D4A     		ldr	r2, .L53+40
 598 0294 0A4B     		ldr	r3, .L53+32
 599 0296 1268     		ldr	r2, [r2]	@ float
 600 0298 1A60     		str	r2, [r3]	@ float
 153:PlateauTest.cpp ****                 break;
 601              		.loc 9 153 17 is_stmt 1 view .LVU196
 602 029a 64E7     		b	.L31
 603              	.LVL29:
 604              	.L47:
 605              		.cfi_def_cfa_offset 0
 606              		.cfi_restore 4
 607              		.cfi_restore 5
 608              		.cfi_restore 6
 609              		.cfi_restore 7
 610              		.cfi_restore 8
 611              		.cfi_restore 9
 612              		.cfi_restore 10
 613              		.cfi_restore 11
 614              		.cfi_restore 14
 615              		.cfi_restore 80
 616              		.cfi_restore 81
 617              		.cfi_restore 82
 618              		.cfi_restore 83
 153:PlateauTest.cpp ****                 break;
 619              		.loc 9 153 17 is_stmt 0 view .LVU197
 620 029c 7047     		bx	lr
 621              	.L54:
 622 029e 00BF     		.align	2
 623              	.L53:
 624 02a0 00000000 		.word	.LANCHOR3
 625 02a4 00000000 		.word	.LANCHOR4
 626 02a8 CDCCCC3D 		.word	1036831949
 627 02ac 00000000 		.word	.LANCHOR0
 628 02b0 00000000 		.word	.LANCHOR5
 629 02b4 00000000 		.word	.LANCHOR6
 630 02b8 FFED0200 		.word	191999
 631 02bc 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 27


 632 02c0 00000000 		.word	.LANCHOR12
 633 02c4 0AD7233C 		.word	1008981770
 634 02c8 00000000 		.word	.LANCHOR11
 635 02cc 00000000 		.word	.LANCHOR10
 636 02d0 00000000 		.word	.LANCHOR9
 637 02d4 00000000 		.word	.LANCHOR16
 638 02d8 00000000 		.word	.LANCHOR15
 639 02dc 00000000 		.word	.LANCHOR14
 640 02e0 00000000 		.word	.LANCHOR13
 641 02e4 00000000 		.word	.LANCHOR18
 642 02e8 00000000 		.word	.LANCHOR17
 643 02ec 00000000 		.word	hold
 644 02f0 00000000 		.word	.LANCHOR1
 645 02f4 00000000 		.word	.LANCHOR2
 646 02f8 00000000 		.word	.LANCHOR8
 647              	.LBE249:
 648              		.cfi_endproc
 649              	.LFE4772:
 651              		.section	.text.startup.main,"ax",%progbits
 652              		.align	1
 653              		.p2align 2,,3
 654              		.global	main
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv5-d16
 660              	main:
 661              	.LFB4773:
 185:PlateauTest.cpp **** 
 186:PlateauTest.cpp **** int main(void)
 187:PlateauTest.cpp **** {
 662              		.loc 9 187 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ Volatile: function does not return.
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 188:PlateauTest.cpp **** 	hw.Init(true);
 667              		.loc 9 188 2 view .LVU199
 187:PlateauTest.cpp **** 	hw.Init(true);
 668              		.loc 9 187 1 is_stmt 0 view .LVU200
 669 0000 80B5     		push	{r7, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673              		.loc 9 188 9 view .LVU201
 674 0002 0121     		movs	r1, #1
 675 0004 4448     		ldr	r0, .L58
 676 0006 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio4InitEb
 677              	.LVL30:
 189:PlateauTest.cpp **** 
 190:PlateauTest.cpp ****     reverb.setSampleRate(32000);
 678              		.loc 9 190 5 is_stmt 1 view .LVU202
 679              		.loc 9 190 25 is_stmt 0 view .LVU203
 680 000a 9FED440A 		vldr.32	s0, .L58+4
 681 000e 4448     		ldr	r0, .L58+8
 191:PlateauTest.cpp **** 
 192:PlateauTest.cpp **** 	hw.SetAudioBlockSize(1); // Number of samples handled per callback
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 28


 193:PlateauTest.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_32KHZ);
 194:PlateauTest.cpp ****     
 195:PlateauTest.cpp ****     hw.StartAudio(AudioCallback);
 196:PlateauTest.cpp **** 
 197:PlateauTest.cpp ****     reverb.setTimeScale(timeScale);
 198:PlateauTest.cpp ****     reverb.setPreDelay(preDelay);
 199:PlateauTest.cpp ****     
 200:PlateauTest.cpp ****     reverb.setInputFilterLowCutoffPitch(inputDampLow);
 201:PlateauTest.cpp ****     reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 202:PlateauTest.cpp **** 
 203:PlateauTest.cpp ****     reverb.enableInputDiffusion(true);
 204:PlateauTest.cpp ****     reverb.setDecay(decay);
 205:PlateauTest.cpp ****     reverb.setTankDiffusion(1.f);
 206:PlateauTest.cpp ****     reverb.setTankFilterLowCutFrequency(reverbDampLow);
 207:PlateauTest.cpp ****     reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 208:PlateauTest.cpp **** 
 209:PlateauTest.cpp ****     reverb.setTankModSpeed(modSpeed);
 210:PlateauTest.cpp ****     reverb.setTankModDepth(modDepth);
 211:PlateauTest.cpp **** 
 212:PlateauTest.cpp ****     reverb.setTankModShape(0.5);
 213:PlateauTest.cpp **** 
 214:PlateauTest.cpp ****     hw.StartAdc();
 215:PlateauTest.cpp **** 
 216:PlateauTest.cpp ****     hw.leds[1].Set(0, 0, inputDampHigh/10.f);
 682              		.loc 9 216 19 view .LVU204
 683 0010 B2EE048A 		vmov.f32	s16, #1.0e+1
 190:PlateauTest.cpp **** 
 684              		.loc 9 190 25 view .LVU205
 685 0014 FFF7FEFF 		bl	_ZN8Dattorro13setSampleRateEf
 686              	.LVL31:
 192:PlateauTest.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_32KHZ);
 687              		.loc 9 192 2 is_stmt 1 view .LVU206
 192:PlateauTest.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_32KHZ);
 688              		.loc 9 192 22 is_stmt 0 view .LVU207
 689 0018 0121     		movs	r1, #1
 690 001a 3F48     		ldr	r0, .L58
 691 001c FFF7FEFF 		bl	_ZN5daisy11DaisyVersio17SetAudioBlockSizeEj
 692              	.LVL32:
 193:PlateauTest.cpp ****     
 693              		.loc 9 193 2 is_stmt 1 view .LVU208
 193:PlateauTest.cpp ****     
 694              		.loc 9 193 23 is_stmt 0 view .LVU209
 695 0020 0221     		movs	r1, #2
 696 0022 3D48     		ldr	r0, .L58
 697 0024 FFF7FEFF 		bl	_ZN5daisy11DaisyVersio18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 698              	.LVL33:
 195:PlateauTest.cpp **** 
 699              		.loc 9 195 5 is_stmt 1 view .LVU210
 195:PlateauTest.cpp **** 
 700              		.loc 9 195 18 is_stmt 0 view .LVU211
 701 0028 3E49     		ldr	r1, .L58+12
 702 002a 3B48     		ldr	r0, .L58
 703 002c FFF7FEFF 		bl	_ZN5daisy11DaisyVersio10StartAudioEPFvPKfPfjE
 704              	.LVL34:
 197:PlateauTest.cpp ****     reverb.setPreDelay(preDelay);
 705              		.loc 9 197 5 is_stmt 1 view .LVU212
 197:PlateauTest.cpp ****     reverb.setPreDelay(preDelay);
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 29


 706              		.loc 9 197 24 is_stmt 0 view .LVU213
 707 0030 3D4B     		ldr	r3, .L58+16
 708 0032 3B48     		ldr	r0, .L58+8
 709 0034 93ED000A 		vldr.32	s0, [r3]
 710 0038 FFF7FEFF 		bl	_ZN8Dattorro12setTimeScaleEf
 711              	.LVL35:
 198:PlateauTest.cpp ****     
 712              		.loc 9 198 5 is_stmt 1 view .LVU214
 198:PlateauTest.cpp ****     
 713              		.loc 9 198 23 is_stmt 0 view .LVU215
 714 003c 3B4B     		ldr	r3, .L58+20
 200:PlateauTest.cpp ****     reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 715              		.loc 9 200 40 view .LVU216
 716 003e 3C4E     		ldr	r6, .L58+24
 198:PlateauTest.cpp ****     
 717              		.loc 9 198 23 view .LVU217
 718 0040 93ED000A 		vldr.32	s0, [r3]
 201:PlateauTest.cpp **** 
 719              		.loc 9 201 41 view .LVU218
 720 0044 3B4F     		ldr	r7, .L58+28
 198:PlateauTest.cpp ****     
 721              		.loc 9 198 23 view .LVU219
 722 0046 3648     		ldr	r0, .L58+8
 723 0048 FFF7FEFF 		bl	_ZN8Dattorro11setPreDelayEf
 724              	.LVL36:
 200:PlateauTest.cpp ****     reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 725              		.loc 9 200 5 is_stmt 1 view .LVU220
 200:PlateauTest.cpp ****     reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 726              		.loc 9 200 40 is_stmt 0 view .LVU221
 727 004c 96ED000A 		vldr.32	s0, [r6]
 728 0050 3348     		ldr	r0, .L58+8
 729 0052 FFF7FEFF 		bl	_ZN8Dattorro28setInputFilterLowCutoffPitchEf
 730              	.LVL37:
 201:PlateauTest.cpp **** 
 731              		.loc 9 201 5 is_stmt 1 view .LVU222
 201:PlateauTest.cpp **** 
 732              		.loc 9 201 41 is_stmt 0 view .LVU223
 733 0056 97ED000A 		vldr.32	s0, [r7]
 734 005a 3148     		ldr	r0, .L58+8
 735 005c FFF7FEFF 		bl	_ZN8Dattorro29setInputFilterHighCutoffPitchEf
 736              	.LVL38:
 203:PlateauTest.cpp ****     reverb.setDecay(decay);
 737              		.loc 9 203 5 is_stmt 1 view .LVU224
 203:PlateauTest.cpp ****     reverb.setDecay(decay);
 738              		.loc 9 203 32 is_stmt 0 view .LVU225
 739 0060 0121     		movs	r1, #1
 740 0062 2F48     		ldr	r0, .L58+8
 741 0064 FFF7FEFF 		bl	_ZN8Dattorro20enableInputDiffusionEb
 742              	.LVL39:
 204:PlateauTest.cpp ****     reverb.setTankDiffusion(1.f);
 743              		.loc 9 204 5 is_stmt 1 view .LVU226
 204:PlateauTest.cpp ****     reverb.setTankDiffusion(1.f);
 744              		.loc 9 204 20 is_stmt 0 view .LVU227
 745 0068 334B     		ldr	r3, .L58+32
 206:PlateauTest.cpp ****     reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 746              		.loc 9 206 40 view .LVU228
 747 006a 344C     		ldr	r4, .L58+36
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 30


 204:PlateauTest.cpp ****     reverb.setTankDiffusion(1.f);
 748              		.loc 9 204 20 view .LVU229
 749 006c 93ED000A 		vldr.32	s0, [r3]
 750 0070 2B48     		ldr	r0, .L58+8
 751 0072 FFF7FEFF 		bl	_ZN8Dattorro8setDecayEf
 752              	.LVL40:
 205:PlateauTest.cpp ****     reverb.setTankFilterLowCutFrequency(reverbDampLow);
 753              		.loc 9 205 5 is_stmt 1 view .LVU230
 207:PlateauTest.cpp **** 
 754              		.loc 9 207 41 is_stmt 0 view .LVU231
 755 0076 324D     		ldr	r5, .L58+40
 205:PlateauTest.cpp ****     reverb.setTankFilterLowCutFrequency(reverbDampLow);
 756              		.loc 9 205 28 view .LVU232
 757 0078 B7EE000A 		vmov.f32	s0, #1.0e+0
 758 007c 2848     		ldr	r0, .L58+8
 759 007e FFF7FEFF 		bl	_ZN8Dattorro16setTankDiffusionEf
 760              	.LVL41:
 206:PlateauTest.cpp ****     reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 761              		.loc 9 206 5 is_stmt 1 view .LVU233
 206:PlateauTest.cpp ****     reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 762              		.loc 9 206 40 is_stmt 0 view .LVU234
 763 0082 94ED000A 		vldr.32	s0, [r4]
 764 0086 2648     		ldr	r0, .L58+8
 765 0088 FFF7FEFF 		bl	_ZN8Dattorro28setTankFilterLowCutFrequencyEf
 766              	.LVL42:
 207:PlateauTest.cpp **** 
 767              		.loc 9 207 5 is_stmt 1 view .LVU235
 207:PlateauTest.cpp **** 
 768              		.loc 9 207 41 is_stmt 0 view .LVU236
 769 008c 95ED000A 		vldr.32	s0, [r5]
 770 0090 2348     		ldr	r0, .L58+8
 771 0092 FFF7FEFF 		bl	_ZN8Dattorro29setTankFilterHighCutFrequencyEf
 772              	.LVL43:
 209:PlateauTest.cpp ****     reverb.setTankModDepth(modDepth);
 773              		.loc 9 209 5 is_stmt 1 view .LVU237
 209:PlateauTest.cpp ****     reverb.setTankModDepth(modDepth);
 774              		.loc 9 209 27 is_stmt 0 view .LVU238
 775 0096 2B4B     		ldr	r3, .L58+44
 776 0098 2148     		ldr	r0, .L58+8
 777 009a 93ED000A 		vldr.32	s0, [r3]
 778 009e FFF7FEFF 		bl	_ZN8Dattorro15setTankModSpeedEf
 779              	.LVL44:
 210:PlateauTest.cpp **** 
 780              		.loc 9 210 5 is_stmt 1 view .LVU239
 210:PlateauTest.cpp **** 
 781              		.loc 9 210 27 is_stmt 0 view .LVU240
 782 00a2 294B     		ldr	r3, .L58+48
 783 00a4 1E48     		ldr	r0, .L58+8
 784 00a6 93ED000A 		vldr.32	s0, [r3]
 785 00aa FFF7FEFF 		bl	_ZN8Dattorro15setTankModDepthEf
 786              	.LVL45:
 212:PlateauTest.cpp **** 
 787              		.loc 9 212 5 is_stmt 1 view .LVU241
 212:PlateauTest.cpp **** 
 788              		.loc 9 212 27 is_stmt 0 view .LVU242
 789 00ae B6EE000A 		vmov.f32	s0, #5.0e-1
 790 00b2 1B48     		ldr	r0, .L58+8
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 31


 791 00b4 FFF7FEFF 		bl	_ZN8Dattorro15setTankModShapeEf
 792              	.LVL46:
 214:PlateauTest.cpp **** 
 793              		.loc 9 214 5 is_stmt 1 view .LVU243
 214:PlateauTest.cpp **** 
 794              		.loc 9 214 16 is_stmt 0 view .LVU244
 795 00b8 1748     		ldr	r0, .L58
 796 00ba FFF7FEFF 		bl	_ZN5daisy11DaisyVersio8StartAdcEv
 797              	.LVL47:
 798              		.loc 9 216 5 is_stmt 1 view .LVU245
 799              		.loc 9 216 19 is_stmt 0 view .LVU246
 800 00be DFED230A 		vldr.32	s1, .L58+52
 801 00c2 97ED001A 		vldr.32	s2, [r7]
 802 00c6 B0EE600A 		vmov.f32	s0, s1
 803 00ca 2148     		ldr	r0, .L58+56
 804 00cc 81EE081A 		vdiv.f32	s2, s2, s16
 805 00d0 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 806              	.LVL48:
 217:PlateauTest.cpp ****     hw.leds[0].Set(0, 0, inputDampLow/10.f);
 807              		.loc 9 217 5 is_stmt 1 view .LVU247
 808              		.loc 9 217 19 is_stmt 0 view .LVU248
 809 00d4 DFED1D0A 		vldr.32	s1, .L58+52
 810 00d8 96ED001A 		vldr.32	s2, [r6]
 811 00dc 1D48     		ldr	r0, .L58+60
 812 00de B0EE600A 		vmov.f32	s0, s1
 813 00e2 81EE081A 		vdiv.f32	s2, s2, s16
 814 00e6 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 815              	.LVL49:
 218:PlateauTest.cpp ****     hw.leds[3].Set(0, 0, reverbDampHigh/10.f);
 816              		.loc 9 218 5 is_stmt 1 view .LVU249
 817              		.loc 9 218 19 is_stmt 0 view .LVU250
 818 00ea DFED180A 		vldr.32	s1, .L58+52
 819 00ee 95ED001A 		vldr.32	s2, [r5]
 820 00f2 1948     		ldr	r0, .L58+64
 821 00f4 B0EE600A 		vmov.f32	s0, s1
 822 00f8 81EE081A 		vdiv.f32	s2, s2, s16
 823 00fc FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 824              	.LVL50:
 219:PlateauTest.cpp ****     hw.leds[2].Set(0, 0, reverbDampLow/10.f);
 825              		.loc 9 219 5 is_stmt 1 view .LVU251
 826              		.loc 9 219 19 is_stmt 0 view .LVU252
 827 0100 94ED001A 		vldr.32	s2, [r4]
 828 0104 DFED110A 		vldr.32	s1, .L58+52
 829 0108 1448     		ldr	r0, .L58+68
 830 010a 81EE081A 		vdiv.f32	s2, s2, s16
 831 010e B0EE600A 		vmov.f32	s0, s1
 832 0112 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 833              	.LVL51:
 834              	.L56:
 220:PlateauTest.cpp **** 
 221:PlateauTest.cpp **** 	while(1) {
 835              		.loc 9 221 2 is_stmt 1 discriminator 1 view .LVU253
 836              		.loc 9 221 2 discriminator 1 view .LVU254
 837              		.loc 9 221 2 discriminator 1 view .LVU255
 838              		.loc 9 221 2 discriminator 1 view .LVU256
 839 0116 FEE7     		b	.L56
 840              	.L59:
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 32


 841              		.align	2
 842              	.L58:
 843 0118 00000000 		.word	.LANCHOR5
 844 011c 0000FA46 		.word	1190789120
 845 0120 00000000 		.word	.LANCHOR0
 846 0124 00000000 		.word	_Z13AudioCallbackPKfPfj
 847 0128 00000000 		.word	.LANCHOR7
 848 012c 00000000 		.word	.LANCHOR17
 849 0130 00000000 		.word	.LANCHOR19
 850 0134 00000000 		.word	.LANCHOR20
 851 0138 00000000 		.word	.LANCHOR11
 852 013c 00000000 		.word	.LANCHOR21
 853 0140 00000000 		.word	.LANCHOR22
 854 0144 00000000 		.word	.LANCHOR13
 855 0148 00000000 		.word	.LANCHOR15
 856 014c 00000000 		.word	0
 857 0150 94000000 		.word	.LANCHOR5+148
 858 0154 40000000 		.word	.LANCHOR5+64
 859 0158 3C010000 		.word	.LANCHOR5+316
 860 015c E8000000 		.word	.LANCHOR5+232
 861              		.cfi_endproc
 862              	.LFE4773:
 864              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 865              		.align	1
 866              		.p2align 2,,3
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv5-d16
 872              	_GLOBAL__sub_I_hw:
 873              	.LFB5425:
 222:PlateauTest.cpp **** 
 223:PlateauTest.cpp ****         // if(hw.sw[0].Read() == 2) {
 224:PlateauTest.cpp ****         //     if(hw.sw[1].Read() == 1) {
 225:PlateauTest.cpp ****         //         inputDampHigh = hw.GetKnobValue(DaisyVersio::KNOB_2) * 10;
 226:PlateauTest.cpp ****         //         if(abs(inputDampHigh - previousInputDampHigh) < 0.1) {
 227:PlateauTest.cpp ****         //             if(inputDampHigh > reverbDampMax)
 228:PlateauTest.cpp ****         //                 inputDampHigh = reverbDampMax;
 229:PlateauTest.cpp ****         //             if(inputDampHigh < reverbDampMin)
 230:PlateauTest.cpp ****         //                 inputDampHigh = reverbDampMin;
 231:PlateauTest.cpp ****         //             previousInputDampHigh = inputDampHigh;
 232:PlateauTest.cpp ****         //             reverb.setInputFilterHighCutoffPitch(inputDampHigh);
 233:PlateauTest.cpp ****         //             hw.leds[1].Set(0, 0, inputDampHigh/10.f);
 234:PlateauTest.cpp ****         //         }
 235:PlateauTest.cpp ****         //     } else if (hw.sw[1].Read() == 2) {
 236:PlateauTest.cpp ****         //         reverbDampHigh = hw.GetKnobValue(DaisyVersio::KNOB_2) * 10;
 237:PlateauTest.cpp ****         //         if(abs(reverbDampHigh - previousReverbDampHigh) < 0.1) {
 238:PlateauTest.cpp ****         //             if(reverbDampHigh > reverbDampMax)
 239:PlateauTest.cpp ****         //                 reverbDampHigh = reverbDampMax;
 240:PlateauTest.cpp ****         //             if(reverbDampHigh < reverbDampMin)
 241:PlateauTest.cpp ****         //                 reverbDampHigh = reverbDampMin;
 242:PlateauTest.cpp ****         //             previousReverbDampHigh = reverbDampHigh;
 243:PlateauTest.cpp ****         //             reverb.setTankFilterHighCutFrequency(reverbDampHigh);
 244:PlateauTest.cpp ****         //             hw.leds[3].Set(0, 0, reverbDampHigh/10.f);
 245:PlateauTest.cpp ****         //         }
 246:PlateauTest.cpp ****         //     }
 247:PlateauTest.cpp ****         // } else if(hw.sw[0].Read() == 1) {
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 33


 248:PlateauTest.cpp ****         //     if(hw.sw[1].Read() == 1) {
 249:PlateauTest.cpp ****         //         inputDampLow = hw.GetKnobValue(DaisyVersio::KNOB_2) * 10;
 250:PlateauTest.cpp ****         //         if(abs(inputDampLow - previousInputDampLow) < 0.1) {
 251:PlateauTest.cpp ****         //             if(inputDampLow > reverbDampMax)
 252:PlateauTest.cpp ****         //                 inputDampLow = reverbDampMax;
 253:PlateauTest.cpp ****         //             if(inputDampLow < reverbDampMin)
 254:PlateauTest.cpp ****         //                 inputDampLow = reverbDampMin;
 255:PlateauTest.cpp ****         //             previousInputDampLow = inputDampLow;
 256:PlateauTest.cpp ****         //             reverb.setInputFilterLowCutoffPitch(inputDampLow);
 257:PlateauTest.cpp ****         //             hw.leds[0].Set(0, 0, inputDampLow/10.f);
 258:PlateauTest.cpp ****         //         }
 259:PlateauTest.cpp ****         //     } else if (hw.sw[1].Read() == 2) {
 260:PlateauTest.cpp ****         //         reverbDampLow = hw.GetKnobValue(DaisyVersio::KNOB_2) * 10;
 261:PlateauTest.cpp ****         //         if(abs(reverbDampLow - previousReverbDampLow) < 0.1) {
 262:PlateauTest.cpp ****         //             if(reverbDampLow > reverbDampMax)
 263:PlateauTest.cpp ****         //                 reverbDampLow = reverbDampMax;
 264:PlateauTest.cpp ****         //             if(reverbDampLow < reverbDampMin)
 265:PlateauTest.cpp ****         //                 reverbDampLow = reverbDampMin;
 266:PlateauTest.cpp ****         //             previousReverbDampLow = reverbDampLow;
 267:PlateauTest.cpp ****         //             reverb.setTankFilterLowCutFrequency(reverbDampLow);
 268:PlateauTest.cpp ****         //             hw.leds[2].Set(0, 0, reverbDampLow/10.f);
 269:PlateauTest.cpp ****         //         }
 270:PlateauTest.cpp ****         //     }
 271:PlateauTest.cpp ****         // }
 272:PlateauTest.cpp ****         // //  else if(hw.sw[0].Read() == 1) { 
 273:PlateauTest.cpp ****         // //     inputDampLow = hw.GetKnobValue(DaisyVersio::KNOB_2) * 10;
 274:PlateauTest.cpp ****         // //     if(abs(inputDampLow - previousInputDampLow) < 0.1) {
 275:PlateauTest.cpp ****         // //         if(inputDampLow > reverbDampMax)
 276:PlateauTest.cpp ****         // //             inputDampLow = reverbDampMax;
 277:PlateauTest.cpp ****         // //         if(inputDampLow < reverbDampMin)
 278:PlateauTest.cpp ****         // //             inputDampLow = reverbDampMin;
 279:PlateauTest.cpp ****         // //         previousInputDampLow = inputDampLow;
 280:PlateauTest.cpp ****         // //         reverb.setInputFilterLowCutoffPitch(inputDampLow);
 281:PlateauTest.cpp ****         // //         hw.leds[1].Set(0, 0, inputDampLow/20.f);
 282:PlateauTest.cpp ****         // //     }
 283:PlateauTest.cpp ****         // // }
 284:PlateauTest.cpp ****         // // reverb.setTankFilterHighCutFrequency(inputDampHigh);
 285:PlateauTest.cpp ****     }
 286:PlateauTest.cpp **** }
 874              		.loc 9 286 1 view -0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LBB291:
 879              	.LBI291:
 880              		.loc 9 286 1 view .LVU258
 881              	.LVL52:
 882              	.LBB292:
 883              	.LBB293:
 884              	.LBI293:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 885              		.loc 1 45 5 view .LVU259
 886              	.LBB294:
 887              	.LBB295:
 888              	.LBI295:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 889              		.loc 4 21 5 view .LVU260
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 34


 890              	.LBB296:
 891              	.LBB297:
 892              	.LBI297:
 893              		.file 11 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 35


  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 36


 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 894              		.loc 11 166 5 view .LVU261
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 37


 895              		.loc 11 166 5 is_stmt 0 view .LVU262
 896              	.LBE297:
 897              	.LBB302:
 898              	.LBI302:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 899              		.loc 8 95 5 is_stmt 1 view .LVU263
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 900              		.loc 8 95 5 is_stmt 0 view .LVU264
 901              	.LBE302:
 902              	.LBB305:
 903              	.LBI305:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 904              		.loc 7 109 5 is_stmt 1 view .LVU265
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 905              		.loc 7 109 5 is_stmt 0 view .LVU266
 906              	.LBE305:
 907              	.LBB306:
 908              	.LBI306:
 909              		.file 12 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 38


  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 910              		.loc 12 84 5 is_stmt 1 view .LVU267
 911              		.loc 12 84 5 is_stmt 0 view .LVU268
 912              	.LBE306:
 913              	.LBB309:
 914              	.LBI309:
  40:../../libDaisy//src/hid/usb.h **** 
 915              		.loc 6 40 5 is_stmt 1 view .LVU269
  40:../../libDaisy//src/hid/usb.h **** 
 916              		.loc 6 40 5 is_stmt 0 view .LVU270
 917              	.LBE309:
 918              	.LBB310:
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 39


 919              	.LBI310:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 920              		.loc 5 96 5 is_stmt 1 view .LVU271
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 921              		.loc 5 96 5 is_stmt 0 view .LVU272
 922              	.LBE310:
 923              	.LBB311:
 924              	.LBI311:
 925              		.file 13 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 40


  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 41


 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 926              		.loc 13 108 5 is_stmt 1 view .LVU273
 927              		.loc 13 108 5 is_stmt 0 view .LVU274
 928              	.LBE311:
 929              	.LBE296:
 930              	.LBE295:
 931              	.LBE294:
 932              	.LBE293:
 933              	.LBE292:
 934              	.LBE291:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 935              		.loc 1 45 19 is_stmt 1 view .LVU275
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 936              		.loc 1 45 19 view .LVU276
 937              	.LBB349:
 938              	.LBB345:
 939              	.LBB342:
 940              	.LBB339:
 941              	.LBB321:
 942              	.LBI321:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 943              		.loc 3 41 5 view .LVU277
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 944              		.loc 3 41 5 is_stmt 0 view .LVU278
 945              	.LBE321:
 946              	.LBB322:
 947              	.LBI322:
  18:../../libDaisy//src/hid/gatein.h **** 
 948              		.loc 2 18 5 is_stmt 1 view .LVU279
 949              	.LBB323:
 950              	.LBB324:
 951              	.LBI324:
 952              		.file 14 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 42


  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 953              		.loc 14 74 5 view .LVU280
 954              	.LBB325:
 955              	.LBB326:
 956              	.LBI326:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 43


 957              		.loc 14 68 9 view .LVU281
 958              	.LBB327:
 959              	.LBB328:
 960              	.LBB329:
 961              	.LBI329:
 962              		.file 15 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 44


  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 45


 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 46


 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 47


 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 963              		.loc 15 272 15 view .LVU282
 964              		.loc 15 272 15 is_stmt 0 view .LVU283
 965              	.LBE329:
 966              	.LBE328:
 967              	.LBE327:
 968              	.LBE326:
 969              	.LBE325:
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 48


 970              	.LBE324:
 971              	.LBE323:
 972              	.LBE322:
 973              	.LBE339:
 974              	.LBE342:
 975              	.LBE345:
 976              	.LBE349:
 977              		.loc 9 286 1 view .LVU284
 978 0000 38B5     		push	{r3, r4, r5, lr}
 979              		.cfi_def_cfa_offset 16
 980              		.cfi_offset 3, -16
 981              		.cfi_offset 4, -12
 982              		.cfi_offset 5, -8
 983              		.cfi_offset 14, -4
 984              	.LBB350:
 985              	.LBB346:
 986              	.LBB343:
 987              	.LBB340:
 988              	.LBB336:
 989              	.LBB319:
 990              	.LBB314:
 991              	.LBB298:
 992              	.LBB299:
 993              		.loc 11 166 34 view .LVU285
 994 0002 1948     		ldr	r0, .L62
 995 0004 0023     		movs	r3, #0
 996              	.LBE299:
 997              	.LBE298:
 998              	.LBE314:
 999              	.LBE319:
 1000              	.LBE336:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 1001              		.loc 1 45 19 view .LVU286
 1002 0006 4FF60B74 		movw	r4, #65291
 1003              	.LBE340:
 1004              	.LBE343:
  35:PlateauTest.cpp **** 
 1005              		.loc 9 35 7 view .LVU287
 1006 000a 184D     		ldr	r5, .L62+4
   9:PlateauTest.cpp **** 
 1007              		.loc 9 9 13 view .LVU288
 1008 000c 184A     		ldr	r2, .L62+8
 1009 000e 1949     		ldr	r1, .L62+12
 1010              	.LBB344:
 1011              	.LBB341:
 1012              	.LBB337:
 1013              	.LBB320:
 1014              	.LBB315:
 1015              	.LBB301:
 1016              	.LBB300:
 1017              		.loc 11 166 34 view .LVU289
 1018 0010 0360     		str	r3, [r0]
 1019              	.LBE300:
 1020              	.LBE301:
 1021              	.LBE315:
 1022              	.LBB316:
 1023              	.LBB303:
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 49


 1024              	.LBB304:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1025              		.loc 8 95 35 view .LVU290
 1026 0012 4361     		str	r3, [r0, #20]
 1027              	.LBE304:
 1028              	.LBE303:
 1029              	.LBE316:
 1030              	.LBB317:
 1031              	.LBB307:
 1032              	.LBB308:
 1033              		.loc 12 84 33 view .LVU291
 1034 0014 0362     		str	r3, [r0, #32]
 1035              	.LBE308:
 1036              	.LBE307:
 1037              	.LBE317:
 1038              	.LBB318:
 1039              	.LBB312:
 1040              	.LBB313:
 1041              		.loc 13 108 33 view .LVU292
 1042 0016 C363     		str	r3, [r0, #60]
 1043              	.LBE313:
 1044              	.LBE312:
 1045              	.LBE318:
 1046              	.LBE320:
 1047              	.LBE337:
 1048              	.LBB338:
 1049              	.LBB335:
 1050              	.LBB334:
 1051              	.LBB333:
 1052              	.LBB332:
 1053              	.LBB331:
 1054              	.LBB330:
  69:../../libDaisy//src/per/gpio.h ****         {
 1055              		.loc 14 69 73 view .LVU293
 1056 0018 C0E9A043 		strd	r4, r3, [r0, #640]
 1057 001c C0E9A233 		strd	r3, r3, [r0, #648]
 1058              	.LVL53:
  69:../../libDaisy//src/per/gpio.h ****         {
 1059              		.loc 14 69 73 view .LVU294
 1060              	.LBE330:
 1061              	.LBE331:
 1062              	.LBE332:
 1063              	.LBE333:
 1064              	.LBE334:
 1065              	.LBE335:
 1066              	.LBE338:
 1067              	.LBE341:
 1068              	.LBE344:
 1069              	.LBE346:
 1070              	.LBE350:
  45:../../libDaisy//src/daisy_versio.h ****     ~DaisyVersio() {}
 1071              		.loc 1 45 19 is_stmt 1 view .LVU295
 1072              	.LBB351:
 1073              	.LBB347:
   9:PlateauTest.cpp **** 
 1074              		.loc 9 9 13 is_stmt 0 view .LVU296
 1075 0020 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 50


 1076              	.LVL54:
  35:PlateauTest.cpp **** 
 1077              		.loc 9 35 7 view .LVU297
 1078 0024 D5F800C0 		ldr	ip, [r5]	@ float
 1079 0028 134B     		ldr	r3, .L62+16
  88:PlateauTest.cpp **** 
 1080              		.loc 9 88 10 view .LVU298
 1081 002a B7EE001A 		vmov.f32	s2, #1.0e+0
  72:PlateauTest.cpp **** 
 1082              		.loc 9 72 7 view .LVU299
 1083 002e 1348     		ldr	r0, .L62+20
  88:PlateauTest.cpp **** 
 1084              		.loc 9 88 10 view .LVU300
 1085 0030 F3EE000A 		vmov.f32	s1, #1.6e+1
  35:PlateauTest.cpp **** 
 1086              		.loc 9 35 7 view .LVU301
 1087 0034 C3F800C0 		str	ip, [r3]	@ float
  72:PlateauTest.cpp **** 
 1088              		.loc 9 72 7 view .LVU302
 1089 0038 0068     		ldr	r0, [r0]	@ float
 1090 003a 114B     		ldr	r3, .L62+24
  75:PlateauTest.cpp **** 
 1091              		.loc 9 75 7 view .LVU303
 1092 003c 1149     		ldr	r1, .L62+28
  72:PlateauTest.cpp **** 
 1093              		.loc 9 72 7 view .LVU304
 1094 003e 1860     		str	r0, [r3]	@ float
  75:PlateauTest.cpp **** 
 1095              		.loc 9 75 7 view .LVU305
 1096 0040 0968     		ldr	r1, [r1]	@ float
 1097 0042 114B     		ldr	r3, .L62+32
  81:PlateauTest.cpp **** 
 1098              		.loc 9 81 7 view .LVU306
 1099 0044 114A     		ldr	r2, .L62+36
  78:PlateauTest.cpp **** 
 1100              		.loc 9 78 7 view .LVU307
 1101 0046 124C     		ldr	r4, .L62+40
  75:PlateauTest.cpp **** 
 1102              		.loc 9 75 7 view .LVU308
 1103 0048 1960     		str	r1, [r3]	@ float
  81:PlateauTest.cpp **** 
 1104              		.loc 9 81 7 view .LVU309
 1105 004a 1268     		ldr	r2, [r2]	@ float
 1106 004c 114B     		ldr	r3, .L62+44
  78:PlateauTest.cpp **** 
 1107              		.loc 9 78 7 view .LVU310
 1108 004e D4F800C0 		ldr	ip, [r4]	@ float
 1109 0052 1149     		ldr	r1, .L62+48
  81:PlateauTest.cpp **** 
 1110              		.loc 9 81 7 view .LVU311
 1111 0054 1A60     		str	r2, [r3]	@ float
  88:PlateauTest.cpp **** 
 1112              		.loc 9 88 10 view .LVU312
 1113 0056 9FED110A 		vldr.32	s0, .L62+52
 1114 005a 1148     		ldr	r0, .L62+56
  78:PlateauTest.cpp **** 
 1115              		.loc 9 78 7 view .LVU313
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 51


 1116 005c C1F800C0 		str	ip, [r1]	@ float
 1117              	.LBE347:
 1118              	.LBE351:
 1119              		.loc 9 286 1 view .LVU314
 1120 0060 BDE83840 		pop	{r3, r4, r5, lr}
 1121              		.cfi_restore 14
 1122              		.cfi_restore 5
 1123              		.cfi_restore 4
 1124              		.cfi_restore 3
 1125              		.cfi_def_cfa_offset 0
 1126              	.LBB352:
 1127              	.LBB348:
  88:PlateauTest.cpp **** 
 1128              		.loc 9 88 10 view .LVU315
 1129 0064 FFF7FEBF 		b	_ZN8DattorroC1Efff
 1130              	.LVL55:
 1131              	.L63:
 1132              		.align	2
 1133              	.L62:
 1134 0068 00000000 		.word	.LANCHOR5
 1135 006c 00000000 		.word	.LANCHOR9
 1136 0070 00000000 		.word	__dso_handle
 1137 0074 00000000 		.word	_ZN5daisy11DaisyVersioD1Ev
 1138 0078 00000000 		.word	.LANCHOR10
 1139 007c 00000000 		.word	.LANCHOR11
 1140 0080 00000000 		.word	.LANCHOR12
 1141 0084 00000000 		.word	.LANCHOR13
 1142 0088 00000000 		.word	.LANCHOR14
 1143 008c 00000000 		.word	.LANCHOR7
 1144 0090 00000000 		.word	.LANCHOR15
 1145 0094 00000000 		.word	.LANCHOR23
 1146 0098 00000000 		.word	.LANCHOR16
 1147 009c 0000FA46 		.word	1190789120
 1148 00a0 00000000 		.word	.LANCHOR0
 1149              	.LBE348:
 1150              	.LBE352:
 1151              		.cfi_endproc
 1152              	.LFE5425:
 1154              		.section	.init_array,"aw",%init_array
 1155              		.align	2
 1156 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1157              		.global	reverb
 1158              		.global	paramCount
 1159              		.global	holdCount
 1160              		.global	tempCutoff
 1161              		.global	previousTimeScale
 1162              		.global	timeScale
 1163              		.global	previousModDepth
 1164              		.global	modDepth
 1165              		.global	previousModSpeed
 1166              		.global	modSpeed
 1167              		.global	previousDecay
 1168              		.global	decay
 1169              		.global	rightOutput
 1170              		.global	leftOutput
 1171              		.global	rightInput
 1172              		.global	leftInput
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 52


 1173              		.global	fadeIn
 1174              		.global	fadeOut
 1175              		.global	cleared
 1176              		.global	clear
 1177              		.global	inputSensitivityState
 1178              		.global	tunedButtonState
 1179              		.global	frozen
 1180              		.global	freeze
 1181              		.global	freezeToggleButtonState
 1182              		.global	freezeToggle
 1183              		.global	freezeButtonState
 1184              		.global	previousReverbDampHigh
 1185              		.global	previousReverbDampLow
 1186              		.global	previousInputDampHigh
 1187              		.global	previousInputDampLow
 1188              		.global	reverbDampHigh
 1189              		.global	reverbDampLow
 1190              		.global	inputDampHigh
 1191              		.global	inputDampLow
 1192              		.global	previousPreDelay
 1193              		.global	preDelay
 1194              		.global	previousWetValue
 1195              		.global	wetValue
 1196              		.global	dry
 1197              		.global	wet
 1198              		.global	hw
 1199              		.section	.bss.clear,"aw",%nobits
 1202              	clear:
 1203 0000 00       		.space	1
 1204              		.section	.bss.fadeIn,"aw",%nobits
 1207              	fadeIn:
 1208 0000 00       		.space	1
 1209              		.section	.bss.fadeOut,"aw",%nobits
 1212              	fadeOut:
 1213 0000 00       		.space	1
 1214              		.section	.bss.freeze,"aw",%nobits
 1217              	freeze:
 1218 0000 00       		.space	1
 1219              		.section	.bss.freezeButtonState,"aw",%nobits
 1222              	freezeButtonState:
 1223 0000 00       		.space	1
 1224              		.section	.bss.freezeToggle,"aw",%nobits
 1227              	freezeToggle:
 1228 0000 00       		.space	1
 1229              		.section	.bss.freezeToggleButtonState,"aw",%nobits
 1232              	freezeToggleButtonState:
 1233 0000 00       		.space	1
 1234              		.section	.bss.frozen,"aw",%nobits
 1237              	frozen:
 1238 0000 00       		.space	1
 1239              		.section	.bss.holdCount,"aw",%nobits
 1240              		.align	2
 1241              		.set	.LANCHOR6,. + 0
 1244              	holdCount:
 1245 0000 00000000 		.space	4
 1246              		.section	.bss.hw,"aw",%nobits
 1247              		.align	2
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 53


 1248              		.set	.LANCHOR5,. + 0
 1251              	hw:
 1252 0000 00000000 		.space	680
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1253              		.section	.bss.inputDampLow,"aw",%nobits
 1254              		.align	2
 1255              		.set	.LANCHOR19,. + 0
 1258              	inputDampLow:
 1259 0000 00000000 		.space	4
 1260              		.section	.bss.inputSensitivityState,"aw",%nobits
 1261              		.align	2
 1264              	inputSensitivityState:
 1265 0000 00000000 		.space	4
 1266              		.section	.bss.leftInput,"aw",%nobits
 1267              		.align	2
 1270              	leftInput:
 1271 0000 00000000 		.space	4
 1272              		.section	.bss.leftOutput,"aw",%nobits
 1273              		.align	2
 1274              		.set	.LANCHOR3,. + 0
 1277              	leftOutput:
 1278 0000 00000000 		.space	4
 1279              		.section	.bss.modDepth,"aw",%nobits
 1280              		.align	2
 1281              		.set	.LANCHOR15,. + 0
 1284              	modDepth:
 1285 0000 00000000 		.space	4
 1286              		.section	.bss.modSpeed,"aw",%nobits
 1287              		.align	2
 1288              		.set	.LANCHOR13,. + 0
 1291              	modSpeed:
 1292 0000 00000000 		.space	4
 1293              		.section	.bss.paramCount,"aw",%nobits
 1294              		.align	2
 1295              		.set	.LANCHOR8,. + 0
 1298              	paramCount:
 1299 0000 00000000 		.space	4
 1300              		.section	.bss.preDelay,"aw",%nobits
 1301              		.align	2
 1302              		.set	.LANCHOR17,. + 0
 1305              	preDelay:
 1306 0000 00000000 		.space	4
 1307              		.section	.bss.previousDecay,"aw",%nobits
 1308              		.align	2
 1309              		.set	.LANCHOR12,. + 0
 1312              	previousDecay:
 1313 0000 00000000 		.space	4
 1314              		.section	.bss.previousInputDampLow,"aw",%nobits
 1315              		.align	2
 1318              	previousInputDampLow:
 1319 0000 00000000 		.space	4
 1320              		.section	.bss.previousModDepth,"aw",%nobits
 1321              		.align	2
 1322              		.set	.LANCHOR16,. + 0
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 54


 1325              	previousModDepth:
 1326 0000 00000000 		.space	4
 1327              		.section	.bss.previousModSpeed,"aw",%nobits
 1328              		.align	2
 1329              		.set	.LANCHOR14,. + 0
 1332              	previousModSpeed:
 1333 0000 00000000 		.space	4
 1334              		.section	.bss.previousPreDelay,"aw",%nobits
 1335              		.align	2
 1336              		.set	.LANCHOR18,. + 0
 1339              	previousPreDelay:
 1340 0000 00000000 		.space	4
 1341              		.section	.bss.previousReverbDampLow,"aw",%nobits
 1342              		.align	2
 1345              	previousReverbDampLow:
 1346 0000 00000000 		.space	4
 1347              		.section	.bss.previousTimeScale,"aw",%nobits
 1348              		.align	2
 1349              		.set	.LANCHOR23,. + 0
 1352              	previousTimeScale:
 1353 0000 00000000 		.space	4
 1354              		.section	.bss.previousWetValue,"aw",%nobits
 1355              		.align	2
 1356              		.set	.LANCHOR10,. + 0
 1359              	previousWetValue:
 1360 0000 00000000 		.space	4
 1361              		.section	.bss.reverb,"aw",%nobits
 1362              		.align	2
 1363              		.set	.LANCHOR0,. + 0
 1366              	reverb:
 1367 0000 00000000 		.space	1644
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1368              		.section	.bss.reverbDampLow,"aw",%nobits
 1369              		.align	2
 1370              		.set	.LANCHOR21,. + 0
 1373              	reverbDampLow:
 1374 0000 00000000 		.space	4
 1375              		.section	.bss.rightInput,"aw",%nobits
 1376              		.align	2
 1379              	rightInput:
 1380 0000 00000000 		.space	4
 1381              		.section	.bss.rightOutput,"aw",%nobits
 1382              		.align	2
 1383              		.set	.LANCHOR4,. + 0
 1386              	rightOutput:
 1387 0000 00000000 		.space	4
 1388              		.section	.bss.tempCutoff,"aw",%nobits
 1389              		.align	2
 1392              	tempCutoff:
 1393 0000 00000000 		.space	4
 1394              		.section	.bss.tunedButtonState,"aw",%nobits
 1397              	tunedButtonState:
 1398 0000 00       		.space	1
 1399              		.section	.bss.wetValue,"aw",%nobits
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 55


 1400              		.align	2
 1401              		.set	.LANCHOR9,. + 0
 1404              	wetValue:
 1405 0000 00000000 		.space	4
 1406              		.section	.data.cleared,"aw"
 1409              	cleared:
 1410 0000 01       		.byte	1
 1411              		.section	.data.decay,"aw"
 1412              		.align	2
 1413              		.set	.LANCHOR11,. + 0
 1416              	decay:
 1417 0000 0000003F 		.word	1056964608
 1418              		.section	.data.dry,"aw"
 1419              		.align	2
 1420              		.set	.LANCHOR1,. + 0
 1423              	dry:
 1424 0000 0000003F 		.word	1056964608
 1425              		.section	.data.inputDampHigh,"aw"
 1426              		.align	2
 1427              		.set	.LANCHOR20,. + 0
 1430              	inputDampHigh:
 1431 0000 00002041 		.word	1092616192
 1432              		.section	.data.previousInputDampHigh,"aw"
 1433              		.align	2
 1436              	previousInputDampHigh:
 1437 0000 00002041 		.word	1092616192
 1438              		.section	.data.previousReverbDampHigh,"aw"
 1439              		.align	2
 1442              	previousReverbDampHigh:
 1443 0000 00002041 		.word	1092616192
 1444              		.section	.data.reverbDampHigh,"aw"
 1445              		.align	2
 1446              		.set	.LANCHOR22,. + 0
 1449              	reverbDampHigh:
 1450 0000 00002041 		.word	1092616192
 1451              		.section	.data.timeScale,"aw"
 1452              		.align	2
 1453              		.set	.LANCHOR7,. + 0
 1456              	timeScale:
 1457 0000 00000040 		.word	1073741824
 1458              		.section	.data.wet,"aw"
 1459              		.align	2
 1460              		.set	.LANCHOR2,. + 0
 1463              	wet:
 1464 0000 0000003F 		.word	1056964608
 1465              		.text
 1466              	.Letext0:
 1467              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1468              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1469              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1470              		.file 19 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1471              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1472              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1473              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1474              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1475              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1476              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 56


 1477              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1478              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1479              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1480              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1481              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1482              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1483              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1484              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1485              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1486              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1487              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
 1488              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1489              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1490              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1491              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1492              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1493              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1494              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1495              		.file 44 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1496              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1497              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1498              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1499              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1500              		.file 49 "../../libDaisy//src/per/tim.h"
 1501              		.file 50 "../../libDaisy//src/hid/switch3.h"
 1502              		.file 51 "../../libDaisy//src/hid/ctrl.h"
 1503              		.file 52 "../../libDaisy//src/util/wav_format.h"
 1504              		.file 53 "../../libDaisy//src/hid/led.h"
 1505              		.file 54 "../../libDaisy//src/util/color.h"
 1506              		.file 55 "../../libDaisy//src/hid/rgb_led.h"
 1507              		.file 56 "../../libDaisy//src/dev/max11300.h"
 1508              		.file 57 "../../libDaisy//src/dev/sdram.h"
 1509              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1510              		.file 59 "../../DaisySP//Source/Control/adenv.h"
 1511              		.file 60 "../../DaisySP//Source/Utility/dsp.h"
 1512              		.file 61 "dsp/delays/InterpDelay.hpp"
 1513              		.file 62 "dsp/delays/AllpassFilter.hpp"
 1514              		.file 63 "dsp/filters/OnePoleFilters.hpp"
 1515              		.file 64 "dsp/modulation/LFO.hpp"
 1516              		.file 65 "Dattorro.hpp"
 1517              		.file 66 "../../libDaisy//src/dev/sr_595.h"
 1518              		.file 67 "<built-in>"
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 PlateauTest.cpp
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:17     .text._ZN5daisy11DaisyVersioD2Ev:00000000 $t
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:26     .text._ZN5daisy11DaisyVersioD2Ev:00000000 _ZN5daisy11DaisyVersioD2Ev
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:26     .text._ZN5daisy11DaisyVersioD2Ev:00000000 _ZN5daisy11DaisyVersioD1Ev
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:84     .text._Z13AudioCallbackPKfPfj:00000000 $t
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:92     .text._Z13AudioCallbackPKfPfj:00000000 _Z13AudioCallbackPKfPfj
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:286    .text._Z13AudioCallbackPKfPfj:0000011a $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:292    .text._Z13AudioCallbackPKfPfj:00000120 $t
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:624    .text._Z13AudioCallbackPKfPfj:000002a0 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:652    .text.startup.main:00000000 $t
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:660    .text.startup.main:00000000 main
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:843    .text.startup.main:00000118 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:865    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:872    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1134   .text.startup._GLOBAL__sub_I_hw:00000068 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1155   .init_array:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1366   .bss.reverb:00000000 reverb
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1298   .bss.paramCount:00000000 paramCount
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1244   .bss.holdCount:00000000 holdCount
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1392   .bss.tempCutoff:00000000 tempCutoff
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1352   .bss.previousTimeScale:00000000 previousTimeScale
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1456   .data.timeScale:00000000 timeScale
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1325   .bss.previousModDepth:00000000 previousModDepth
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1284   .bss.modDepth:00000000 modDepth
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1332   .bss.previousModSpeed:00000000 previousModSpeed
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1291   .bss.modSpeed:00000000 modSpeed
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1312   .bss.previousDecay:00000000 previousDecay
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1416   .data.decay:00000000 decay
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1386   .bss.rightOutput:00000000 rightOutput
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1277   .bss.leftOutput:00000000 leftOutput
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1379   .bss.rightInput:00000000 rightInput
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1270   .bss.leftInput:00000000 leftInput
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1207   .bss.fadeIn:00000000 fadeIn
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1212   .bss.fadeOut:00000000 fadeOut
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1409   .data.cleared:00000000 cleared
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1202   .bss.clear:00000000 clear
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1264   .bss.inputSensitivityState:00000000 inputSensitivityState
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1397   .bss.tunedButtonState:00000000 tunedButtonState
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1237   .bss.frozen:00000000 frozen
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1217   .bss.freeze:00000000 freeze
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1232   .bss.freezeToggleButtonState:00000000 freezeToggleButtonState
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1227   .bss.freezeToggle:00000000 freezeToggle
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1222   .bss.freezeButtonState:00000000 freezeButtonState
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1442   .data.previousReverbDampHigh:00000000 previousReverbDampHigh
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1345   .bss.previousReverbDampLow:00000000 previousReverbDampLow
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1436   .data.previousInputDampHigh:00000000 previousInputDampHigh
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1318   .bss.previousInputDampLow:00000000 previousInputDampLow
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1449   .data.reverbDampHigh:00000000 reverbDampHigh
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1373   .bss.reverbDampLow:00000000 reverbDampLow
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1430   .data.inputDampHigh:00000000 inputDampHigh
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1258   .bss.inputDampLow:00000000 inputDampLow
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1339   .bss.previousPreDelay:00000000 previousPreDelay
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1305   .bss.preDelay:00000000 preDelay
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1359   .bss.previousWetValue:00000000 previousWetValue
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1404   .bss.wetValue:00000000 wetValue
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1423   .data.dry:00000000 dry
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 58


C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1463   .data.wet:00000000 wet
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1251   .bss.hw:00000000 hw
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1203   .bss.clear:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1208   .bss.fadeIn:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1213   .bss.fadeOut:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1218   .bss.freeze:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1223   .bss.freezeButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1228   .bss.freezeToggle:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1233   .bss.freezeToggleButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1238   .bss.frozen:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1240   .bss.holdCount:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1247   .bss.hw:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1254   .bss.inputDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1261   .bss.inputSensitivityState:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1267   .bss.leftInput:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1273   .bss.leftOutput:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1280   .bss.modDepth:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1287   .bss.modSpeed:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1294   .bss.paramCount:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1301   .bss.preDelay:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1308   .bss.previousDecay:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1315   .bss.previousInputDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1321   .bss.previousModDepth:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1328   .bss.previousModSpeed:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1335   .bss.previousPreDelay:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1342   .bss.previousReverbDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1348   .bss.previousTimeScale:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1355   .bss.previousWetValue:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1362   .bss.reverb:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1369   .bss.reverbDampLow:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1376   .bss.rightInput:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1382   .bss.rightOutput:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1389   .bss.tempCutoff:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1398   .bss.tunedButtonState:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1400   .bss.wetValue:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1412   .data.decay:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1419   .data.dry:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1426   .data.inputDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1433   .data.previousInputDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1439   .data.previousReverbDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1445   .data.reverbDampHigh:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1452   .data.timeScale:00000000 $d
C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s:1459   .data.wet:00000000 $d
                           .group:00000000 _ZN5daisy11DaisyVersioD5Ev

UNDEFINED SYMBOLS
_ZN8Dattorro7processEff
_ZNK8Dattorro13getLeftOutputEv
_ZNK8Dattorro14getRightOutputEv
_ZN5daisy11DaisyVersio21ProcessAnalogControlsEv
_ZN5daisy11DaisyVersio12GetKnobValueEi
_ZN8Dattorro12setTimeScaleEf
_ZN8Dattorro15setTankModDepthEf
_ZN8Dattorro15setTankModSpeedEf
_ZN8Dattorro11setPreDelayEf
_ZN8Dattorro8setDecayEf
hold
ARM GAS  C:\Users\digit\AppData\Local\Temp\cckv2Gvu.s 			page 59


_ZN5daisy11DaisyVersio4InitEb
_ZN8Dattorro13setSampleRateEf
_ZN5daisy11DaisyVersio17SetAudioBlockSizeEj
_ZN5daisy11DaisyVersio18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy11DaisyVersio10StartAudioEPFvPKfPfjE
_ZN8Dattorro28setInputFilterLowCutoffPitchEf
_ZN8Dattorro29setInputFilterHighCutoffPitchEf
_ZN8Dattorro20enableInputDiffusionEb
_ZN8Dattorro16setTankDiffusionEf
_ZN8Dattorro28setTankFilterLowCutFrequencyEf
_ZN8Dattorro29setTankFilterHighCutFrequencyEf
_ZN8Dattorro15setTankModShapeEf
_ZN5daisy11DaisyVersio8StartAdcEv
_ZN5daisy6RgbLed3SetEfff
__aeabi_atexit
_ZN8DattorroC1Efff
__dso_handle
